10 Newton iteration 11 done10 , maximum relative shift = 4.775e-07
10 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
57 converged value: 1 121 1 let s go get convergedRemote
57 to  comm_.min(converged) 
57 did  comm_.min(converged) convergedRemote: 1
57 final convergedRemote: 1
57 Update: x^(k+1) = x^k - deltax^k 
57 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
57 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
57 Newton iteration 11 done57 , maximum relative shift = 4.775e-07
57 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
120 converged value: 1 121 1 let s go get convergedRemote
120 to  comm_.min(converged) 
120 did  comm_.min(converged) convergedRemote: 1
120 final convergedRemote: 1
120 Update: x^(k+1) = x^k - deltax^k 
120 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
120 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
120 Newton iteration 11 done120 , maximum relative shift = 4.775e-07
120 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
63 converged value: 1 121 1 let s go get convergedRemote
63 to  comm_.min(converged) 
63 did  comm_.min(converged) convergedRemote: 1
63 final convergedRemote: 1
63 Update: x^(k+1) = x^k - deltax^k 
63 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
63 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
63 Newton iteration 11 done63 , maximum relative shift = 4.775e-07
63 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
12 converged value: 1 121 1 let s go get convergedRemote
12 to  comm_.min(converged) 
12 did  comm_.min(converged) convergedRemote: 1
12 final convergedRemote: 1
12 Update: x^(k+1) = x^k - deltax^k 
12 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
12 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
12 Newton iteration 11 done12 , maximum relative shift = 4.775e-07
12 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
73 converged value: 1 121 1 let s go get convergedRemote
73 to  comm_.min(converged) 
73 did  comm_.min(converged) convergedRemote: 1
73 final convergedRemote: 1
73 Update: x^(k+1) = x^k - deltax^k 
73 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
73 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
73 Newton iteration 11 done73 , maximum relative shift = 4.775e-07
73 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
101 converged value: 1 121 1 let s go get convergedRemote
101 to  comm_.min(converged) 
101 did  comm_.min(converged) convergedRemote: 1
101 final convergedRemote: 1
101 Update: x^(k+1) = x^k - deltax^k 
101 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
101 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
101 Newton iteration 11 done101 , maximum relative shift = 4.775e-07
101 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
19 converged value: 1 121 1 let s go get convergedRemote
19 to  comm_.min(converged) 
19 did  comm_.min(converged) convergedRemote: 1
19 final convergedRemote: 1
19 Update: x^(k+1) = x^k - deltax^k 
19 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
19 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
19 Newton iteration 11 done19 , maximum relative shift = 4.775e-07
19 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
1 converged value: 1 121 1 let s go get convergedRemote
1 to  comm_.min(converged) 
1 did  comm_.min(converged) convergedRemote: 1
1 final convergedRemote: 1
1 Update: x^(k+1) = x^k - deltax^k 
1 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
1 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
1 Newton iteration 11 done1 , maximum relative shift = 4.775e-07
1 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
93 converged value: 1 121 1 let s go get convergedRemote
93 to  comm_.min(converged) 
93 did  comm_.min(converged) convergedRemote: 1
93 final convergedRemote: 1
93 Update: x^(k+1) = x^k - deltax^k 
93 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
93 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
93 Newton iteration 11 done93 , maximum relative shift = 4.775e-07
93 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
82 converged value: 1 121 1 let s go get convergedRemote
82 to  comm_.min(converged) 
82 did  comm_.min(converged) convergedRemote: 1
82 final convergedRemote: 1
82 Update: x^(k+1) = x^k - deltax^k 
82 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
82 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
82 Newton iteration 11 done82 , maximum relative shift = 4.775e-07
82 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
117 converged value: 1 121 1 let s go get convergedRemote
117 to  comm_.min(converged) 
117 did  comm_.min(converged) convergedRemote: 1
117 final convergedRemote: 1
117 Update: x^(k+1) = x^k - deltax^k 
117 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
117 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
117 Newton iteration 11 done117 , maximum relative shift = 4.775e-07
117 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
48 converged value: 1 121 1 let s go get convergedRemote
48 to  comm_.min(converged) 
48 did  comm_.min(converged) convergedRemote: 1
48 final convergedRemote: 1
48 Update: x^(k+1) = x^k - deltax^k 
48 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
48 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
48 Newton iteration 11 done48 , maximum relative shift = 4.775e-07
48 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
20 converged value: 1 121 1 let s go get convergedRemote
20 to  comm_.min(converged) 
20 did  comm_.min(converged) convergedRemote: 1
20 final convergedRemote: 1
20 Update: x^(k+1) = x^k - deltax^k 
20 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
20 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
20 Newton iteration 11 done20 , maximum relative shift = 4.775e-07
20 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
99 converged value: 1 121 1 let s go get convergedRemote
99 to  comm_.min(converged) 
99 did  comm_.min(converged) convergedRemote: 1
99 final convergedRemote: 1
99 Update: x^(k+1) = x^k - deltax^k 
99 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
99 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
99 Newton iteration 11 done99 , maximum relative shift = 4.775e-07
99 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
24 converged value: 1 121 1 let s go get convergedRemote
24 to  comm_.min(converged) 
24 did  comm_.min(converged) convergedRemote: 1
24 final convergedRemote: 1
24 Update: x^(k+1) = x^k - deltax^k 
24 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
24 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
24 Newton iteration 11 done24 , maximum relative shift = 4.775e-07
24 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
72 converged value: 1 121 1 let s go get convergedRemote
72 to  comm_.min(converged) 
72 did  comm_.min(converged) convergedRemote: 1
72 final convergedRemote: 1
72 Update: x^(k+1) = x^k - deltax^k 
72 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
72 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
72 Newton iteration 11 done72 , maximum relative shift = 4.775e-07
72 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
103 converged value: 1 121 1 let s go get convergedRemote
103 to  comm_.min(converged) 
103 did  comm_.min(converged) convergedRemote: 1
103 final convergedRemote: 1
103 Update: x^(k+1) = x^k - deltax^k 
103 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
103 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
103 Newton iteration 11 done103 , maximum relative shift = 4.775e-07
103 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
55 converged value: 1 121 1 let s go get convergedRemote
55 to  comm_.min(converged) 
55 did  comm_.min(converged) convergedRemote: 1
55 final convergedRemote: 1
55 Update: x^(k+1) = x^k - deltax^k 
55 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
55 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
55 Newton iteration 11 done55 , maximum relative shift = 4.775e-07
55 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
90 converged value: 1 121 1 let s go get convergedRemote
90 to  comm_.min(converged) 
90 did  comm_.min(converged) convergedRemote: 1
90 final convergedRemote: 1
90 Update: x^(k+1) = x^k - deltax^k 
90 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
90 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
90 Newton iteration 11 done90 , maximum relative shift = 4.775e-07
90 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
104 converged value: 1 121 1 let s go get convergedRemote
104 to  comm_.min(converged) 
104 did  comm_.min(converged) convergedRemote: 1
104 final convergedRemote: 1
104 Update: x^(k+1) = x^k - deltax^k 
104 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
104 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
104 Newton iteration 11 done104 , maximum relative shift = 4.775e-07
104 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
39 converged value: 1 121 1 let s go get convergedRemote
39 to  comm_.min(converged) 
39 did  comm_.min(converged) convergedRemote: 1
39 final convergedRemote: 1
39 Update: x^(k+1) = x^k - deltax^k 
39 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
39 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
39 Newton iteration 11 done39 , maximum relative shift = 4.775e-07
39 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
85 converged value: 1 121 1 let s go get convergedRemote
85 to  comm_.min(converged) 
85 did  comm_.min(converged) convergedRemote: 1
85 final convergedRemote: 1
85 Update: x^(k+1) = x^k - deltax^k 
85 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
85 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
85 Newton iteration 11 done85 , maximum relative shift = 4.775e-07
85 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
25 converged value: 1 121 1 let s go get convergedRemote
25 to  comm_.min(converged) 
25 did  comm_.min(converged) convergedRemote: 1
25 final convergedRemote: 1
25 Update: x^(k+1) = x^k - deltax^k 
25 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
25 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
25 Newton iteration 11 done25 , maximum relative shift = 4.775e-07
25 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
36 converged value: 1 121 1 let s go get convergedRemote
36 to  comm_.min(converged) 
36 did  comm_.min(converged) convergedRemote: 1
36 final convergedRemote: 1
36 Update: x^(k+1) = x^k - deltax^k 
36 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
36 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
36 Newton iteration 11 done36 , maximum relative shift = 4.775e-07
36 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
0 converged value: 1 121 1 let s go get convergedRemote
0 to  comm_.min(converged) 
0 did  comm_.min(converged) convergedRemote: 1
0 final convergedRemote: 1
0 Update: x^(k+1) = x^k - deltax^k 
0 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
0 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
0 Newton iteration 11 done0 , maximum relative shift = 4.775e-07
0 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
75 converged value: 1 121 1 let s go get convergedRemote
75 to  comm_.min(converged) 
75 did  comm_.min(converged) convergedRemote: 1
75 final convergedRemote: 1
75 Update: x^(k+1) = x^k - deltax^k 
75 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
75 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
75 Newton iteration 11 done75 , maximum relative shift = 4.775e-07
75 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
68 converged value: 1 121 1 let s go get convergedRemote
68 to  comm_.min(converged) 
68 did  comm_.min(converged) convergedRemote: 1
68 final convergedRemote: 1
68 Update: x^(k+1) = x^k - deltax^k 
68 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
68 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
68 Newton iteration 11 done68 , maximum relative shift = 4.775e-07
68 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
114 converged value: 1 121 1 let s go get convergedRemote
114 to  comm_.min(converged) 
114 did  comm_.min(converged) convergedRemote: 1
114 final convergedRemote: 1
114 Update: x^(k+1) = x^k - deltax^k 
114 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
114 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
114 Newton iteration 11 done114 , maximum relative shift = 4.775e-07
114 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
46 Solve: M deltax^k = r 
46 Newton::solveLinearSystem : entering the try section 11
46 in solveLinearSystemImpl_
94 Solve: M deltax^k = r 
94 Newton::solveLinearSystem : entering the try section 11
94 in solveLinearSystemImpl_
98 Solve: M deltax^k = r 
98 Newton::solveLinearSystem : entering the try section 11
98 in solveLinearSystemImpl_
56 Solve: M deltax^k = r 
56 Newton::solveLinearSystem : entering the try section 11
56 in solveLinearSystemImpl_
38 Solve: M deltax^k = r 
38 Newton::solveLinearSystem : entering the try section 11
38 in solveLinearSystemImpl_
60 Solve: M deltax^k = r 
60 Newton::solveLinearSystem : entering the try section 11
60 in solveLinearSystemImpl_
119 Solve: M deltax^k = r 
119 Newton::solveLinearSystem : entering the try section 11
119 in solveLinearSystemImpl_
45 Solve: M deltax^k = r 
45 Newton::solveLinearSystem : entering the try section 11
45 in solveLinearSystemImpl_
111 Solve: M deltax^k = r 
111 Newton::solveLinearSystem : entering the try section 11
111 in solveLinearSystemImpl_
115 Solve: M deltax^k = r 
115 Newton::solveLinearSystem : entering the try section 11
115 in solveLinearSystemImpl_
89 Solve: M deltax^k = r 
89 Newton::solveLinearSystem : entering the try section 11
89 in solveLinearSystemImpl_
108 Solve: M deltax^k = r 
108 Newton::solveLinearSystem : entering the try section 11
108 in solveLinearSystemImpl_
76 Solve: M deltax^k = r 
76 Newton::solveLinearSystem : entering the try section 11
76 in solveLinearSystemImpl_
54 Solve: M deltax^k = r 
54 Newton::solveLinearSystem : entering the try section 11
54 in solveLinearSystemImpl_
10 Solve: M deltax^k = r 
10 Newton::solveLinearSystem : entering the try section 11
10 in solveLinearSystemImpl_
57 Solve: M deltax^k = r 
57 Newton::solveLinearSystem : entering the try section 11
57 in solveLinearSystemImpl_
120 Solve: M deltax^k = r 
120 Newton::solveLinearSystem : entering the try section 11
120 in solveLinearSystemImpl_
63 Solve: M deltax^k = r 
63 Newton::solveLinearSystem : entering the try section 11
63 in solveLinearSystemImpl_
12 Solve: M deltax^k = r 
12 Newton::solveLinearSystem : entering the try section 11
12 in solveLinearSystemImpl_
114 Solve: M deltax^k = r 
114 Newton::solveLinearSystem : entering the try section 11
114 in solveLinearSystemImpl_
101 Solve: M deltax^k = r 
101 Newton::solveLinearSystem : entering the try section 11
101 in solveLinearSystemImpl_
19 Solve: M deltax^k = r 
19 Newton::solveLinearSystem : entering the try section 11
19 in solveLinearSystemImpl_
1 Solve: M deltax^k = r 
1 Newton::solveLinearSystem : entering the try section 11
1 in solveLinearSystemImpl_
93 Solve: M deltax^k = r 
93 Newton::solveLinearSystem : entering the try section 11
93 in solveLinearSystemImpl_
82 Solve: M deltax^k = r 
82 Newton::solveLinearSystem : entering the try section 11
82 in solveLinearSystemImpl_
117 Solve: M deltax^k = r 
117 Newton::solveLinearSystem : entering the try section 11
117 in solveLinearSystemImpl_
48 Solve: M deltax^k = r 
48 Newton::solveLinearSystem : entering the try section 11
48 in solveLinearSystemImpl_
20 Solve: M deltax^k = r 
20 Newton::solveLinearSystem : entering the try section 11
20 in solveLinearSystemImpl_
99 Solve: M deltax^k = r 
99 Newton::solveLinearSystem : entering the try section 11
99 in solveLinearSystemImpl_
24 Solve: M deltax^k = r 
24 Newton::solveLinearSystem : entering the try section 11
24 in solveLinearSystemImpl_
72 Solve: M deltax^k = r 
72 Newton::solveLinearSystem : entering the try section 11
72 in solveLinearSystemImpl_
103 Solve: M deltax^k = r 
103 Newton::solveLinearSystem : entering the try section 11
103 in solveLinearSystemImpl_
55 Solve: M deltax^k = r 
55 Newton::solveLinearSystem : entering the try section 11
55 in solveLinearSystemImpl_
90 Solve: M deltax^k = r 
90 Newton::solveLinearSystem : entering the try section 11
90 in solveLinearSystemImpl_
104 Solve: M deltax^k = r 
104 Newton::solveLinearSystem : entering the try section 11
104 in solveLinearSystemImpl_
39 Solve: M deltax^k = r 
39 Newton::solveLinearSystem : entering the try section 11
39 in solveLinearSystemImpl_
85 Solve: M deltax^k = r 
85 Newton::solveLinearSystem : entering the try section 11
85 in solveLinearSystemImpl_
25 Solve: M deltax^k = r 
25 Newton::solveLinearSystem : entering the try section 11
25 in solveLinearSystemImpl_
36 Solve: M deltax^k = r 
36 Newton::solveLinearSystem : entering the try section 11
36 in solveLinearSystemImpl_
0 Solve: M deltax^k = r 
0 Newton::solveLinearSystem : entering the try section 11
0 in solveLinearSystemImpl_
75 Solve: M deltax^k = r 
75 Newton::solveLinearSystem : entering the try section 11
75 in solveLinearSystemImpl_
68 Solve: M deltax^k = r 
68 Newton::solveLinearSystem : entering the try section 11
68 in solveLinearSystemImpl_
73 Solve: M deltax^k = r 
73 Newton::solveLinearSystem : entering the try section 11
73 in solveLinearSystemImpl_
11 Solve: M deltax^k = r 
11 Newton::solveLinearSystem : entering the try section 11
11 in solveLinearSystemImpl_
112 Solve: M deltax^k = r 
112 Newton::solveLinearSystem : entering the try section 11
112 in solveLinearSystemImpl_
102 Solve: M deltax^k = r 
102 Newton::solveLinearSystem : entering the try section 11
102 in solveLinearSystemImpl_
105 Solve: M deltax^k = r 
105 Newton::solveLinearSystem : entering the try section 11
105 in solveLinearSystemImpl_
59 Solve: M deltax^k = r 
59 Newton::solveLinearSystem : entering the try section 11
59 in solveLinearSystemImpl_
42 Solve: M deltax^k = r 
42 Newton::solveLinearSystem : entering the try section 11
42 in solveLinearSystemImpl_
4 Solve: M deltax^k = r 
4 Newton::solveLinearSystem : entering the try section 11
4 in solveLinearSystemImpl_
79 Solve: M deltax^k = r 
79 Newton::solveLinearSystem : entering the try section 11
79 in solveLinearSystemImpl_
5 Solve: M deltax^k = r 
5 Newton::solveLinearSystem : entering the try section 11
5 in solveLinearSystemImpl_
80 Solve: M deltax^k = r 
80 Newton::solveLinearSystem : entering the try section 11
80 in solveLinearSystemImpl_
87 Solve: M deltax^k = r 
87 Newton::solveLinearSystem : entering the try section 11
87 in solveLinearSystemImpl_
50 Solve: M deltax^k = r 
50 Newton::solveLinearSystem : entering the try section 11
50 in solveLinearSystemImpl_
32 Solve: M deltax^k = r 
32 Newton::solveLinearSystem : entering the try section 11
32 in solveLinearSystemImpl_
109 Solve: M deltax^k = r 
109 Newton::solveLinearSystem : entering the try section 11
109 in solveLinearSystemImpl_
34 Solve: M deltax^k = r 
34 Newton::solveLinearSystem : entering the try section 11
34 in solveLinearSystemImpl_
107 Solve: M deltax^k = r 
107 Newton::solveLinearSystem : entering the try section 11
107 in solveLinearSystemImpl_
106 Solve: M deltax^k = r 
106 Newton::solveLinearSystem : entering the try section 11
106 in solveLinearSystemImpl_
9 Solve: M deltax^k = r 
9 Newton::solveLinearSystem : entering the try section 11
9 in solveLinearSystemImpl_
30 Solve: M deltax^k = r 
30 Newton::solveLinearSystem : entering the try section 11
30 in solveLinearSystemImpl_
51 Solve: M deltax^k = r 
51 Newton::solveLinearSystem : entering the try section 11
51 in solveLinearSystemImpl_
21 Solve: M deltax^k = r 
21 Newton::solveLinearSystem : entering the try section 11
21 in solveLinearSystemImpl_
15 Solve: M deltax^k = r 
15 Newton::solveLinearSystem : entering the try section 11
15 in solveLinearSystemImpl_
33 Solve: M deltax^k = r 
33 Newton::solveLinearSystem : entering the try section 11
33 in solveLinearSystemImpl_
61 Solve: M deltax^k = r 
61 Newton::solveLinearSystem : entering the try section 11
61 in solveLinearSystemImpl_
78 Solve: M deltax^k = r 
78 Newton::solveLinearSystem : entering the try section 11
78 in solveLinearSystemImpl_
22 Solve: M deltax^k = r 
22 Newton::solveLinearSystem : entering the try section 11
22 in solveLinearSystemImpl_
43 Solve: M deltax^k = r 
43 Newton::solveLinearSystem : entering the try section 11
43 in solveLinearSystemImpl_
116 Solve: M deltax^k = r 
116 Newton::solveLinearSystem : entering the try section 11
116 in solveLinearSystemImpl_
26 Solve: M deltax^k = r 
26 Newton::solveLinearSystem : entering the try section 11
26 in solveLinearSystemImpl_
69 Solve: M deltax^k = r 
69 Newton::solveLinearSystem : entering the try section 11
69 in solveLinearSystemImpl_
47 Solve: M deltax^k = r 
47 Newton::solveLinearSystem : entering the try section 11
47 in solveLinearSystemImpl_
95 Solve: M deltax^k = r 
95 Newton::solveLinearSystem : entering the try section 11
95 in solveLinearSystemImpl_
8 Solve: M deltax^k = r 
8 Newton::solveLinearSystem : entering the try section 11
8 in solveLinearSystemImpl_
29 Solve: M deltax^k = r 
29 Newton::solveLinearSystem : entering the try section 11
29 in solveLinearSystemImpl_
31 Solve: M deltax^k = r 
31 Newton::solveLinearSystem : entering the try section 11
31 in solveLinearSystemImpl_
96 Solve: M deltax^k = r 
96 Newton::solveLinearSystem : entering the try section 11
96 in solveLinearSystemImpl_
58 Solve: M deltax^k = r 
58 Newton::solveLinearSystem : entering the try section 11
58 in solveLinearSystemImpl_
17 Solve: M deltax^k = r 
17 Newton::solveLinearSystem : entering the try section 11
17 in solveLinearSystemImpl_
23 Solve: M deltax^k = r 
23 Newton::solveLinearSystem : entering the try section 11
23 in solveLinearSystemImpl_
40 Solve: M deltax^k = r 
40 Newton::solveLinearSystem : entering the try section 11
40 in solveLinearSystemImpl_
53 Solve: M deltax^k = r 
53 Newton::solveLinearSystem : entering the try section 11
53 in solveLinearSystemImpl_
88 Solve: M deltax^k = r 
88 Newton::solveLinearSystem : entering the try section 11
88 in solveLinearSystemImpl_
91 Solve: M deltax^k = r 
91 Newton::solveLinearSystem : entering the try section 11
91 in solveLinearSystemImpl_
62 Solve: M deltax^k = r 
62 Newton::solveLinearSystem : entering the try section 11
62 in solveLinearSystemImpl_
3 Solve: M deltax^k = r 
3 Newton::solveLinearSystem : entering the try section 11
3 in solveLinearSystemImpl_
14 Solve: M deltax^k = r 
14 Newton::solveLinearSystem : entering the try section 11
14 in solveLinearSystemImpl_
74 Solve: M deltax^k = r 
74 Newton::solveLinearSystem : entering the try section 11
74 in solveLinearSystemImpl_
67 Solve: M deltax^k = r 
67 Newton::solveLinearSystem : entering the try section 11
67 in solveLinearSystemImpl_
81 Solve: M deltax^k = r 
81 Newton::solveLinearSystem : entering the try section 11
81 in solveLinearSystemImpl_
6 Solve: M deltax^k = r 
6 Newton::solveLinearSystem : entering the try section 11
6 in solveLinearSystemImpl_
118 Solve: M deltax^k = r 
118 Newton::solveLinearSystem : entering the try section 11
118 in solveLinearSystemImpl_
65 Solve: M deltax^k = r 
65 Newton::solveLinearSystem : entering the try section 11
65 in solveLinearSystemImpl_
37 Solve: M deltax^k = r 
37 Newton::solveLinearSystem : entering the try section 11
37 in solveLinearSystemImpl_
92 Solve: M deltax^k = r 
92 Newton::solveLinearSystem : entering the try section 11
92 in solveLinearSystemImpl_
70 Solve: M deltax^k = r 
70 Newton::solveLinearSystem : entering the try section 11
70 in solveLinearSystemImpl_
66 Solve: M deltax^k = r 
66 Newton::solveLinearSystem : entering the try section 11
66 in solveLinearSystemImpl_
84 Solve: M deltax^k = r 
84 Newton::solveLinearSystem : entering the try section 11
84 in solveLinearSystemImpl_
64 Solve: M deltax^k = r 
64 Newton::solveLinearSystem : entering the try section 11
64 in solveLinearSystemImpl_
44 Solve: M deltax^k = r 
44 Newton::solveLinearSystem : entering the try section 11
44 in solveLinearSystemImpl_
110 Solve: M deltax^k = r 
110 Newton::solveLinearSystem : entering the try section 11
110 in solveLinearSystemImpl_
41 Solve: M deltax^k = r 
41 Newton::solveLinearSystem : entering the try section 11
41 in solveLinearSystemImpl_
52 Solve: M deltax^k = r 
52 Newton::solveLinearSystem : entering the try section 11
52 in solveLinearSystemImpl_
100 Solve: M deltax^k = r 
100 Newton::solveLinearSystem : entering the try section 11
100 in solveLinearSystemImpl_
77 Solve: M deltax^k = r 
77 Newton::solveLinearSystem : entering the try section 11
77 in solveLinearSystemImpl_
16 Solve: M deltax^k = r 
16 Newton::solveLinearSystem : entering the try section 11
16 in solveLinearSystemImpl_
49 Solve: M deltax^k = r 
49 Newton::solveLinearSystem : entering the try section 11
49 in solveLinearSystemImpl_
97 Solve: M deltax^k = r 
97 Newton::solveLinearSystem : entering the try section 11
97 in solveLinearSystemImpl_
35 Solve: M deltax^k = r 
35 Newton::solveLinearSystem : entering the try section 11
35 in solveLinearSystemImpl_
7 Solve: M deltax^k = r 
7 Newton::solveLinearSystem : entering the try section 11
7 in solveLinearSystemImpl_
83 Solve: M deltax^k = r 
83 Newton::solveLinearSystem : entering the try section 11
83 in solveLinearSystemImpl_
18 Solve: M deltax^k = r 
18 Newton::solveLinearSystem : entering the try section 11
18 in solveLinearSystemImpl_
27 Solve: M deltax^k = r 
27 Newton::solveLinearSystem : entering the try section 11
27 in solveLinearSystemImpl_
2 Solve: M deltax^k = r 
2 Newton::solveLinearSystem : entering the try section 11
2 in solveLinearSystemImpl_
28 Solve: M deltax^k = r 
28 Newton::solveLinearSystem : entering the try section 11
28 in solveLinearSystemImpl_
13 Solve: M deltax^k = r 
13 Newton::solveLinearSystem : entering the try section 11
13 in solveLinearSystemImpl_
86 Solve: M deltax^k = r 
86 Newton::solveLinearSystem : entering the try section 11
86 in solveLinearSystemImpl_
71 Solve: M deltax^k = r 
71 Newton::solveLinearSystem : entering the try section 11
71 in solveLinearSystemImpl_
113 Solve: M deltax^k = r 
113 Newton::solveLinearSystem : entering the try section 11
113 in solveLinearSystemImpl_
48 converged value: 1 121 1 let s go get convergedRemote
48 to  comm_.min(converged) 
48 did  comm_.min(converged) convergedRemote: 1
48 final convergedRemote: 1
48 Update: x^(k+1) = x^k - deltax^k 
48 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
48 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
48 Newton iteration 12 done48 , maximum relative shift = 5.211e-08
48 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
20 converged value: 1 121 1 let s go get convergedRemote
20 to  comm_.min(converged) 
20 did  comm_.min(converged) convergedRemote: 1
20 final convergedRemote: 1
20 Update: x^(k+1) = x^k - deltax^k 
20 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
20 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
20 Newton iteration 12 done20 , maximum relative shift = 5.211e-08
20 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
99 converged value: 1 121 1 let s go get convergedRemote
99 to  comm_.min(converged) 
99 did  comm_.min(converged) convergedRemote: 1
99 final convergedRemote: 1
99 Update: x^(k+1) = x^k - deltax^k 
99 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
99 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
99 Newton iteration 12 done99 , maximum relative shift = 5.211e-08
99 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
24 converged value: 1 121 1 let s go get convergedRemote
24 to  comm_.min(converged) 
24 did  comm_.min(converged) convergedRemote: 1
24 final convergedRemote: 1
24 Update: x^(k+1) = x^k - deltax^k 
24 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
24 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
24 Newton iteration 12 done24 , maximum relative shift = 5.211e-08
24 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
72 converged value: 1 121 1 let s go get convergedRemote
72 to  comm_.min(converged) 
72 did  comm_.min(converged) convergedRemote: 1
72 final convergedRemote: 1
72 Update: x^(k+1) = x^k - deltax^k 
72 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
72 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
72 Newton iteration 12 done72 , maximum relative shift = 5.211e-08
72 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
103 converged value: 1 121 1 let s go get convergedRemote
103 to  comm_.min(converged) 
103 did  comm_.min(converged) convergedRemote: 1
103 final convergedRemote: 1
103 Update: x^(k+1) = x^k - deltax^k 
103 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
103 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
103 Newton iteration 12 done103 , maximum relative shift = 5.211e-08
103 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
55 converged value: 1 121 1 let s go get convergedRemote
55 to  comm_.min(converged) 
55 did  comm_.min(converged) convergedRemote: 1
55 final convergedRemote: 1
55 Update: x^(k+1) = x^k - deltax^k 
55 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
55 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
55 Newton iteration 12 done55 , maximum relative shift = 5.211e-08
55 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
90 converged value: 1 121 1 let s go get convergedRemote
90 to  comm_.min(converged) 
90 did  comm_.min(converged) convergedRemote: 1
90 final convergedRemote: 1
90 Update: x^(k+1) = x^k - deltax^k 
90 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
90 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
90 Newton iteration 12 done90 , maximum relative shift = 5.211e-08
90 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
104 converged value: 1 121 1 let s go get convergedRemote
104 to  comm_.min(converged) 
104 did  comm_.min(converged) convergedRemote: 1
104 final convergedRemote: 1
104 Update: x^(k+1) = x^k - deltax^k 
104 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
104 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
104 Newton iteration 12 done104 , maximum relative shift = 5.211e-08
104 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
39 converged value: 1 121 1 let s go get convergedRemote
39 to  comm_.min(converged) 
39 did  comm_.min(converged) convergedRemote: 1
39 final convergedRemote: 1
39 Update: x^(k+1) = x^k - deltax^k 
39 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
39 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
39 Newton iteration 12 done39 , maximum relative shift = 5.211e-08
39 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
85 converged value: 1 121 1 let s go get convergedRemote
85 to  comm_.min(converged) 
85 did  comm_.min(converged) convergedRemote: 1
85 final convergedRemote: 1
85 Update: x^(k+1) = x^k - deltax^k 
85 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
85 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
85 Newton iteration 12 done85 , maximum relative shift = 5.211e-08
85 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
25 converged value: 1 121 1 let s go get convergedRemote
25 to  comm_.min(converged) 
25 did  comm_.min(converged) convergedRemote: 1
25 final convergedRemote: 1
25 Update: x^(k+1) = x^k - deltax^k 
25 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
25 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
25 Newton iteration 12 done25 , maximum relative shift = 5.211e-08
25 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
36 converged value: 1 121 1 let s go get convergedRemote
36 to  comm_.min(converged) 
36 did  comm_.min(converged) convergedRemote: 1
36 final convergedRemote: 1
36 Update: x^(k+1) = x^k - deltax^k 
36 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
36 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
36 Newton iteration 12 done36 , maximum relative shift = 5.211e-08
36 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
0 converged value: 1 121 1 let s go get convergedRemote
0 to  comm_.min(converged) 
0 did  comm_.min(converged) convergedRemote: 1
0 final convergedRemote: 1
0 Update: x^(k+1) = x^k - deltax^k 
0 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
0 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
0 Newton iteration 12 done0 , maximum relative shift = 5.211e-08
0 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
75 converged value: 1 121 1 let s go get convergedRemote
75 to  comm_.min(converged) 
75 did  comm_.min(converged) convergedRemote: 1
75 final convergedRemote: 1
75 Update: x^(k+1) = x^k - deltax^k 
75 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
75 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
75 Newton iteration 12 done75 , maximum relative shift = 5.211e-08
75 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
68 converged value: 1 121 1 let s go get convergedRemote
68 to  comm_.min(converged) 
68 did  comm_.min(converged) convergedRemote: 1
68 final convergedRemote: 1
68 Update: x^(k+1) = x^k - deltax^k 
68 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
68 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
68 Newton iteration 12 done68 , maximum relative shift = 5.211e-08
68 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
73 converged value: 1 121 1 let s go get convergedRemote
73 to  comm_.min(converged) 
73 did  comm_.min(converged) convergedRemote: 1
73 final convergedRemote: 1
73 Update: x^(k+1) = x^k - deltax^k 
73 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
73 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
73 Newton iteration 12 done73 , maximum relative shift = 5.211e-08
73 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
11 converged value: 1 121 1 let s go get convergedRemote
11 to  comm_.min(converged) 
11 did  comm_.min(converged) convergedRemote: 1
11 final convergedRemote: 1
11 Update: x^(k+1) = x^k - deltax^k 
11 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
11 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
11 Newton iteration 12 done11 , maximum relative shift = 5.211e-08
11 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
112 converged value: 1 121 1 let s go get convergedRemote
112 to  comm_.min(converged) 
112 did  comm_.min(converged) convergedRemote: 1
112 final convergedRemote: 1
112 Update: x^(k+1) = x^k - deltax^k 
112 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
112 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
112 Newton iteration 12 done112 , maximum relative shift = 5.211e-08
112 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
102 converged value: 1 121 1 let s go get convergedRemote
102 to  comm_.min(converged) 
102 did  comm_.min(converged) convergedRemote: 1
102 final convergedRemote: 1
102 Update: x^(k+1) = x^k - deltax^k 
102 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
102 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
102 Newton iteration 12 done102 , maximum relative shift = 5.211e-08
102 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
105 converged value: 1 121 1 let s go get convergedRemote
105 to  comm_.min(converged) 
105 did  comm_.min(converged) convergedRemote: 1
105 final convergedRemote: 1
105 Update: x^(k+1) = x^k - deltax^k 
105 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
105 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
105 Newton iteration 12 done105 , maximum relative shift = 5.211e-08
105 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
59 converged value: 1 121 1 let s go get convergedRemote
59 to  comm_.min(converged) 
59 did  comm_.min(converged) convergedRemote: 1
59 final convergedRemote: 1
59 Update: x^(k+1) = x^k - deltax^k 
59 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
59 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
59 Newton iteration 12 done59 , maximum relative shift = 5.211e-08
59 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
42 converged value: 1 121 1 let s go get convergedRemote
42 to  comm_.min(converged) 
42 did  comm_.min(converged) convergedRemote: 1
42 final convergedRemote: 1
42 Update: x^(k+1) = x^k - deltax^k 
42 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
42 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
42 Newton iteration 12 done42 , maximum relative shift = 5.211e-08
42 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
4 converged value: 1 121 1 let s go get convergedRemote
4 to  comm_.min(converged) 
4 did  comm_.min(converged) convergedRemote: 1
4 final convergedRemote: 1
4 Update: x^(k+1) = x^k - deltax^k 
4 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
4 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
4 Newton iteration 12 done4 , maximum relative shift = 5.211e-08
4 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
79 converged value: 1 121 1 let s go get convergedRemote
79 to  comm_.min(converged) 
79 did  comm_.min(converged) convergedRemote: 1
79 final convergedRemote: 1
79 Update: x^(k+1) = x^k - deltax^k 
79 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
79 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
79 Newton iteration 12 done79 , maximum relative shift = 5.211e-08
79 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
5 converged value: 1 121 1 let s go get convergedRemote
5 to  comm_.min(converged) 
5 did  comm_.min(converged) convergedRemote: 1
5 final convergedRemote: 1
5 Update: x^(k+1) = x^k - deltax^k 
5 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
5 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
5 Newton iteration 12 done5 , maximum relative shift = 5.211e-08
5 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
80 converged value: 1 121 1 let s go get convergedRemote
80 to  comm_.min(converged) 
80 did  comm_.min(converged) convergedRemote: 1
80 final convergedRemote: 1
80 Update: x^(k+1) = x^k - deltax^k 
80 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
80 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
80 Newton iteration 12 done80 , maximum relative shift = 5.211e-08
80 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
87 converged value: 1 121 1 let s go get convergedRemote
87 to  comm_.min(converged) 
87 did  comm_.min(converged) convergedRemote: 1
87 final convergedRemote: 1
87 Update: x^(k+1) = x^k - deltax^k 
87 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
87 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
87 Newton iteration 12 done87 , maximum relative shift = 5.211e-08
87 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
50 converged value: 1 121 1 let s go get convergedRemote
50 to  comm_.min(converged) 
50 did  comm_.min(converged) convergedRemote: 1
50 final convergedRemote: 1
50 Update: x^(k+1) = x^k - deltax^k 
50 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
50 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
50 Newton iteration 12 done50 , maximum relative shift = 5.211e-08
50 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
32 converged value: 1 121 1 let s go get convergedRemote
32 to  comm_.min(converged) 
32 did  comm_.min(converged) convergedRemote: 1
32 final convergedRemote: 1
32 Update: x^(k+1) = x^k - deltax^k 
32 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
32 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
32 Newton iteration 12 done32 , maximum relative shift = 5.211e-08
32 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
109 converged value: 1 121 1 let s go get convergedRemote
109 to  comm_.min(converged) 
109 did  comm_.min(converged) convergedRemote: 1
109 final convergedRemote: 1
109 Update: x^(k+1) = x^k - deltax^k 
109 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
109 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
109 Newton iteration 12 done109 , maximum relative shift = 5.211e-08
109 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
34 converged value: 1 121 1 let s go get convergedRemote
34 to  comm_.min(converged) 
34 did  comm_.min(converged) convergedRemote: 1
34 final convergedRemote: 1
34 Update: x^(k+1) = x^k - deltax^k 
34 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
34 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
34 Newton iteration 12 done34 , maximum relative shift = 5.211e-08
34 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
107 converged value: 1 121 1 let s go get convergedRemote
107 to  comm_.min(converged) 
107 did  comm_.min(converged) convergedRemote: 1
107 final convergedRemote: 1
107 Update: x^(k+1) = x^k - deltax^k 
107 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
107 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
107 Newton iteration 12 done107 , maximum relative shift = 5.211e-08
107 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
106 converged value: 1 121 1 let s go get convergedRemote
106 to  comm_.min(converged) 
106 did  comm_.min(converged) convergedRemote: 1
106 final convergedRemote: 1
106 Update: x^(k+1) = x^k - deltax^k 
106 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
106 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
106 Newton iteration 12 done106 , maximum relative shift = 5.211e-08
106 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
9 converged value: 1 121 1 let s go get convergedRemote
9 to  comm_.min(converged) 
9 did  comm_.min(converged) convergedRemote: 1
9 final convergedRemote: 1
9 Update: x^(k+1) = x^k - deltax^k 
9 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
9 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
9 Newton iteration 12 done9 , maximum relative shift = 5.211e-08
9 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
30 converged value: 1 121 1 let s go get convergedRemote
30 to  comm_.min(converged) 
30 did  comm_.min(converged) convergedRemote: 1
30 final convergedRemote: 1
30 Update: x^(k+1) = x^k - deltax^k 
30 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
30 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
30 Newton iteration 12 done30 , maximum relative shift = 5.211e-08
30 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
51 converged value: 1 121 1 let s go get convergedRemote
51 to  comm_.min(converged) 
51 did  comm_.min(converged) convergedRemote: 1
51 final convergedRemote: 1
51 Update: x^(k+1) = x^k - deltax^k 
51 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
51 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
51 Newton iteration 12 done51 , maximum relative shift = 5.211e-08
51 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
21 converged value: 1 121 1 let s go get convergedRemote
21 to  comm_.min(converged) 
21 did  comm_.min(converged) convergedRemote: 1
21 final convergedRemote: 1
21 Update: x^(k+1) = x^k - deltax^k 
21 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
21 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
21 Newton iteration 12 done21 , maximum relative shift = 5.211e-08
21 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
15 converged value: 1 121 1 let s go get convergedRemote
15 to  comm_.min(converged) 
15 did  comm_.min(converged) convergedRemote: 1
15 final convergedRemote: 1
15 Update: x^(k+1) = x^k - deltax^k 
15 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
15 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
15 Newton iteration 12 done15 , maximum relative shift = 5.211e-08
15 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
33 converged value: 1 121 1 let s go get convergedRemote
33 to  comm_.min(converged) 
33 did  comm_.min(converged) convergedRemote: 1
33 final convergedRemote: 1
33 Update: x^(k+1) = x^k - deltax^k 
33 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
33 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
33 Newton iteration 12 done33 , maximum relative shift = 5.211e-08
33 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
61 converged value: 1 121 1 let s go get convergedRemote
61 to  comm_.min(converged) 
61 did  comm_.min(converged) convergedRemote: 1
61 final convergedRemote: 1
61 Update: x^(k+1) = x^k - deltax^k 
61 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
61 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
61 Newton iteration 12 done61 , maximum relative shift = 5.211e-08
61 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
78 converged value: 1 121 1 let s go get convergedRemote
78 to  comm_.min(converged) 
78 did  comm_.min(converged) convergedRemote: 1
78 final convergedRemote: 1
78 Update: x^(k+1) = x^k - deltax^k 
78 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
78 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
78 Newton iteration 12 done78 , maximum relative shift = 5.211e-08
78 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
22 converged value: 1 121 1 let s go get convergedRemote
22 to  comm_.min(converged) 
22 did  comm_.min(converged) convergedRemote: 1
22 final convergedRemote: 1
22 Update: x^(k+1) = x^k - deltax^k 
22 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
22 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
22 Newton iteration 12 done22 , maximum relative shift = 5.211e-08
22 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
43 converged value: 1 121 1 let s go get convergedRemote
43 to  comm_.min(converged) 
43 did  comm_.min(converged) convergedRemote: 1
43 final convergedRemote: 1
43 Update: x^(k+1) = x^k - deltax^k 
43 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
43 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
43 Newton iteration 12 done43 , maximum relative shift = 5.211e-08
43 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
116 converged value: 1 121 1 let s go get convergedRemote
116 to  comm_.min(converged) 
116 did  comm_.min(converged) convergedRemote: 1
116 final convergedRemote: 1
116 Update: x^(k+1) = x^k - deltax^k 
116 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
116 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
116 Newton iteration 12 done116 , maximum relative shift = 5.211e-08
116 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
26 converged value: 1 121 1 let s go get convergedRemote
26 to  comm_.min(converged) 
26 did  comm_.min(converged) convergedRemote: 1
26 final convergedRemote: 1
26 Update: x^(k+1) = x^k - deltax^k 
26 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
26 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
26 Newton iteration 12 done26 , maximum relative shift = 5.211e-08
26 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
69 converged value: 1 121 1 let s go get convergedRemote
69 to  comm_.min(converged) 
69 did  comm_.min(converged) convergedRemote: 1
69 final convergedRemote: 1
69 Update: x^(k+1) = x^k - deltax^k 
69 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
69 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
69 Newton iteration 12 done69 , maximum relative shift = 5.211e-08
69 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
47 converged value: 1 121 1 let s go get convergedRemote
47 to  comm_.min(converged) 
47 did  comm_.min(converged) convergedRemote: 1
47 final convergedRemote: 1
47 Update: x^(k+1) = x^k - deltax^k 
47 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
47 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
47 Newton iteration 12 done47 , maximum relative shift = 5.211e-08
47 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
95 converged value: 1 121 1 let s go get convergedRemote
95 to  comm_.min(converged) 
95 did  comm_.min(converged) convergedRemote: 1
95 final convergedRemote: 1
95 Update: x^(k+1) = x^k - deltax^k 
95 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
95 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
95 Newton iteration 12 done95 , maximum relative shift = 5.211e-08
95 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
8 converged value: 1 121 1 let s go get convergedRemote
8 to  comm_.min(converged) 
8 did  comm_.min(converged) convergedRemote: 1
8 final convergedRemote: 1
8 Update: x^(k+1) = x^k - deltax^k 
8 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
8 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
8 Newton iteration 12 done8 , maximum relative shift = 5.211e-08
8 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
29 converged value: 1 121 1 let s go get convergedRemote
29 to  comm_.min(converged) 
29 did  comm_.min(converged) convergedRemote: 1
29 final convergedRemote: 1
29 Update: x^(k+1) = x^k - deltax^k 
29 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
29 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
29 Newton iteration 12 done29 , maximum relative shift = 5.211e-08
29 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
31 converged value: 1 121 1 let s go get convergedRemote
31 to  comm_.min(converged) 
31 did  comm_.min(converged) convergedRemote: 1
31 final convergedRemote: 1
31 Update: x^(k+1) = x^k - deltax^k 
31 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
31 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
31 Newton iteration 12 done31 , maximum relative shift = 5.211e-08
31 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
96 converged value: 1 121 1 let s go get convergedRemote
96 to  comm_.min(converged) 
96 did  comm_.min(converged) convergedRemote: 1
96 final convergedRemote: 1
96 Update: x^(k+1) = x^k - deltax^k 
96 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
96 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
96 Newton iteration 12 done96 , maximum relative shift = 5.211e-08
96 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
58 converged value: 1 121 1 let s go get convergedRemote
58 to  comm_.min(converged) 
58 did  comm_.min(converged) convergedRemote: 1
58 final convergedRemote: 1
58 Update: x^(k+1) = x^k - deltax^k 
58 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
58 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
58 Newton iteration 12 done58 , maximum relative shift = 5.211e-08
58 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
17 converged value: 1 121 1 let s go get convergedRemote
17 to  comm_.min(converged) 
17 did  comm_.min(converged) convergedRemote: 1
17 final convergedRemote: 1
17 Update: x^(k+1) = x^k - deltax^k 
17 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
17 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
17 Newton iteration 12 done17 , maximum relative shift = 5.211e-08
17 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
23 converged value: 1 121 1 let s go get convergedRemote
23 to  comm_.min(converged) 
23 did  comm_.min(converged) convergedRemote: 1
23 final convergedRemote: 1
23 Update: x^(k+1) = x^k - deltax^k 
23 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
23 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
23 Newton iteration 12 done23 , maximum relative shift = 5.211e-08
23 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
40 converged value: 1 121 1 let s go get convergedRemote
40 to  comm_.min(converged) 
40 did  comm_.min(converged) convergedRemote: 1
40 final convergedRemote: 1
40 Update: x^(k+1) = x^k - deltax^k 
40 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
40 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
40 Newton iteration 12 done40 , maximum relative shift = 5.211e-08
40 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
53 converged value: 1 121 1 let s go get convergedRemote
53 to  comm_.min(converged) 
53 did  comm_.min(converged) convergedRemote: 1
53 final convergedRemote: 1
53 Update: x^(k+1) = x^k - deltax^k 
53 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
53 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
53 Newton iteration 12 done53 , maximum relative shift = 5.211e-08
53 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
88 converged value: 1 121 1 let s go get convergedRemote
88 to  comm_.min(converged) 
88 did  comm_.min(converged) convergedRemote: 1
88 final convergedRemote: 1
88 Update: x^(k+1) = x^k - deltax^k 
88 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
88 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
88 Newton iteration 12 done88 , maximum relative shift = 5.211e-08
88 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
91 converged value: 1 121 1 let s go get convergedRemote
91 to  comm_.min(converged) 
91 did  comm_.min(converged) convergedRemote: 1
91 final convergedRemote: 1
91 Update: x^(k+1) = x^k - deltax^k 
91 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
91 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
91 Newton iteration 12 done91 , maximum relative shift = 5.211e-08
91 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
62 converged value: 1 121 1 let s go get convergedRemote
62 to  comm_.min(converged) 
62 did  comm_.min(converged) convergedRemote: 1
62 final convergedRemote: 1
62 Update: x^(k+1) = x^k - deltax^k 
62 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
62 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
62 Newton iteration 12 done62 , maximum relative shift = 5.211e-08
62 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
3 converged value: 1 121 1 let s go get convergedRemote
3 to  comm_.min(converged) 
3 did  comm_.min(converged) convergedRemote: 1
3 final convergedRemote: 1
3 Update: x^(k+1) = x^k - deltax^k 
3 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
3 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
3 Newton iteration 12 done3 , maximum relative shift = 5.211e-08
3 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
14 converged value: 1 121 1 let s go get convergedRemote
14 to  comm_.min(converged) 
14 did  comm_.min(converged) convergedRemote: 1
14 final convergedRemote: 1
14 Update: x^(k+1) = x^k - deltax^k 
14 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
14 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
14 Newton iteration 12 done14 , maximum relative shift = 5.211e-08
14 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
74 converged value: 1 121 1 let s go get convergedRemote
74 to  comm_.min(converged) 
74 did  comm_.min(converged) convergedRemote: 1
74 final convergedRemote: 1
74 Update: x^(k+1) = x^k - deltax^k 
74 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
74 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
74 Newton iteration 12 done74 , maximum relative shift = 5.211e-08
74 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
67 converged value: 1 121 1 let s go get convergedRemote
67 to  comm_.min(converged) 
67 did  comm_.min(converged) convergedRemote: 1
67 final convergedRemote: 1
67 Update: x^(k+1) = x^k - deltax^k 
67 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
67 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
67 Newton iteration 12 done67 , maximum relative shift = 5.211e-08
67 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
81 converged value: 1 121 1 let s go get convergedRemote
81 to  comm_.min(converged) 
81 did  comm_.min(converged) convergedRemote: 1
81 final convergedRemote: 1
81 Update: x^(k+1) = x^k - deltax^k 
81 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
81 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
81 Newton iteration 12 done81 , maximum relative shift = 5.211e-08
81 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
6 converged value: 1 121 1 let s go get convergedRemote
6 to  comm_.min(converged) 
6 did  comm_.min(converged) convergedRemote: 1
6 final convergedRemote: 1
6 Update: x^(k+1) = x^k - deltax^k 
6 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
6 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
6 Newton iteration 12 done6 , maximum relative shift = 5.211e-08
6 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
118 converged value: 1 121 1 let s go get convergedRemote
118 to  comm_.min(converged) 
118 did  comm_.min(converged) convergedRemote: 1
118 final convergedRemote: 1
118 Update: x^(k+1) = x^k - deltax^k 
118 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
118 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
118 Newton iteration 12 done118 , maximum relative shift = 5.211e-08
118 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
65 converged value: 1 121 1 let s go get convergedRemote
65 to  comm_.min(converged) 
65 did  comm_.min(converged) convergedRemote: 1
65 final convergedRemote: 1
65 Update: x^(k+1) = x^k - deltax^k 
65 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
65 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
65 Newton iteration 12 done65 , maximum relative shift = 5.211e-08
65 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
37 converged value: 1 121 1 let s go get convergedRemote
37 to  comm_.min(converged) 
37 did  comm_.min(converged) convergedRemote: 1
37 final convergedRemote: 1
37 Update: x^(k+1) = x^k - deltax^k 
37 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
37 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
37 Newton iteration 12 done37 , maximum relative shift = 5.211e-08
37 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
92 converged value: 1 121 1 let s go get convergedRemote
92 to  comm_.min(converged) 
92 did  comm_.min(converged) convergedRemote: 1
92 final convergedRemote: 1
92 Update: x^(k+1) = x^k - deltax^k 
92 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
92 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
92 Newton iteration 12 done92 , maximum relative shift = 5.211e-08
92 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
70 converged value: 1 121 1 let s go get convergedRemote
70 to  comm_.min(converged) 
70 did  comm_.min(converged) convergedRemote: 1
70 final convergedRemote: 1
70 Update: x^(k+1) = x^k - deltax^k 
70 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
70 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
70 Newton iteration 12 done70 , maximum relative shift = 5.211e-08
70 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
66 converged value: 1 121 1 let s go get convergedRemote
66 to  comm_.min(converged) 
66 did  comm_.min(converged) convergedRemote: 1
66 final convergedRemote: 1
66 Update: x^(k+1) = x^k - deltax^k 
66 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
66 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
66 Newton iteration 12 done66 , maximum relative shift = 5.211e-08
66 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
84 converged value: 1 121 1 let s go get convergedRemote
84 to  comm_.min(converged) 
84 did  comm_.min(converged) convergedRemote: 1
84 final convergedRemote: 1
84 Update: x^(k+1) = x^k - deltax^k 
84 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
84 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
84 Newton iteration 12 done84 , maximum relative shift = 5.211e-08
84 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
64 converged value: 1 121 1 let s go get convergedRemote
64 to  comm_.min(converged) 
64 did  comm_.min(converged) convergedRemote: 1
64 final convergedRemote: 1
64 Update: x^(k+1) = x^k - deltax^k 
64 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
64 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
64 Newton iteration 12 done64 , maximum relative shift = 5.211e-08
64 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
44 converged value: 1 121 1 let s go get convergedRemote
44 to  comm_.min(converged) 
44 did  comm_.min(converged) convergedRemote: 1
44 final convergedRemote: 1
44 Update: x^(k+1) = x^k - deltax^k 
44 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
44 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
44 Newton iteration 12 done44 , maximum relative shift = 5.211e-08
44 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
110 converged value: 1 121 1 let s go get convergedRemote
110 to  comm_.min(converged) 
110 did  comm_.min(converged) convergedRemote: 1
110 final convergedRemote: 1
110 Update: x^(k+1) = x^k - deltax^k 
110 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
110 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
110 Newton iteration 12 done110 , maximum relative shift = 5.211e-08
110 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
41 converged value: 1 121 1 let s go get convergedRemote
41 to  comm_.min(converged) 
41 did  comm_.min(converged) convergedRemote: 1
41 final convergedRemote: 1
41 Update: x^(k+1) = x^k - deltax^k 
41 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
41 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
41 Newton iteration 12 done41 , maximum relative shift = 5.211e-08
41 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
52 converged value: 1 121 1 let s go get convergedRemote
52 to  comm_.min(converged) 
52 did  comm_.min(converged) convergedRemote: 1
52 final convergedRemote: 1
52 Update: x^(k+1) = x^k - deltax^k 
52 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
52 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
52 Newton iteration 12 done52 , maximum relative shift = 5.211e-08
52 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
100 converged value: 1 121 1 let s go get convergedRemote
100 to  comm_.min(converged) 
100 did  comm_.min(converged) convergedRemote: 1
100 final convergedRemote: 1
100 Update: x^(k+1) = x^k - deltax^k 
100 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
100 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
100 Newton iteration 12 done100 , maximum relative shift = 5.211e-08
100 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
77 converged value: 1 121 1 let s go get convergedRemote
77 to  comm_.min(converged) 
77 did  comm_.min(converged) convergedRemote: 1
77 final convergedRemote: 1
77 Update: x^(k+1) = x^k - deltax^k 
77 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
77 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
77 Newton iteration 12 done77 , maximum relative shift = 5.211e-08
77 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
16 converged value: 1 121 1 let s go get convergedRemote
16 to  comm_.min(converged) 
16 did  comm_.min(converged) convergedRemote: 1
16 final convergedRemote: 1
16 Update: x^(k+1) = x^k - deltax^k 
16 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
16 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
16 Newton iteration 12 done16 , maximum relative shift = 5.211e-08
16 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
49 converged value: 1 121 1 let s go get convergedRemote
49 to  comm_.min(converged) 
49 did  comm_.min(converged) convergedRemote: 1
49 final convergedRemote: 1
49 Update: x^(k+1) = x^k - deltax^k 
49 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
49 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
49 Newton iteration 12 done49 , maximum relative shift = 5.211e-08
49 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
97 converged value: 1 121 1 let s go get convergedRemote
97 to  comm_.min(converged) 
97 did  comm_.min(converged) convergedRemote: 1
97 final convergedRemote: 1
97 Update: x^(k+1) = x^k - deltax^k 
97 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
97 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
97 Newton iteration 12 done97 , maximum relative shift = 5.211e-08
97 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
35 converged value: 1 121 1 let s go get convergedRemote
35 to  comm_.min(converged) 
35 did  comm_.min(converged) convergedRemote: 1
35 final convergedRemote: 1
35 Update: x^(k+1) = x^k - deltax^k 
35 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
35 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
35 Newton iteration 12 done35 , maximum relative shift = 5.211e-08
35 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
7 converged value: 1 121 1 let s go get convergedRemote
7 to  comm_.min(converged) 
7 did  comm_.min(converged) convergedRemote: 1
7 final convergedRemote: 1
7 Update: x^(k+1) = x^k - deltax^k 
7 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
7 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
7 Newton iteration 12 done7 , maximum relative shift = 5.211e-08
7 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
83 converged value: 1 121 1 let s go get convergedRemote
83 to  comm_.min(converged) 
83 did  comm_.min(converged) convergedRemote: 1
83 final convergedRemote: 1
83 Update: x^(k+1) = x^k - deltax^k 
83 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
83 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
83 Newton iteration 12 done83 , maximum relative shift = 5.211e-08
83 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
18 converged value: 1 121 1 let s go get convergedRemote
18 to  comm_.min(converged) 
18 did  comm_.min(converged) convergedRemote: 1
18 final convergedRemote: 1
18 Update: x^(k+1) = x^k - deltax^k 
18 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
18 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
18 Newton iteration 12 done18 , maximum relative shift = 5.211e-08
18 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
27 converged value: 1 121 1 let s go get convergedRemote
27 to  comm_.min(converged) 
27 did  comm_.min(converged) convergedRemote: 1
27 final convergedRemote: 1
27 Update: x^(k+1) = x^k - deltax^k 
27 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
27 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
27 Newton iteration 12 done27 , maximum relative shift = 5.211e-08
27 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
2 converged value: 1 121 1 let s go get convergedRemote
2 to  comm_.min(converged) 
2 did  comm_.min(converged) convergedRemote: 1
2 final convergedRemote: 1
2 Update: x^(k+1) = x^k - deltax^k 
2 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
2 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
2 Newton iteration 12 done2 , maximum relative shift = 5.211e-08
2 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
28 converged value: 1 121 1 let s go get convergedRemote
28 to  comm_.min(converged) 
28 did  comm_.min(converged) convergedRemote: 1
28 final convergedRemote: 1
28 Update: x^(k+1) = x^k - deltax^k 
28 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
28 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
28 Newton iteration 12 done28 , maximum relative shift = 5.211e-08
28 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
13 converged value: 1 121 1 let s go get convergedRemote
13 to  comm_.min(converged) 
13 did  comm_.min(converged) convergedRemote: 1
13 final convergedRemote: 1
13 Update: x^(k+1) = x^k - deltax^k 
13 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
13 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
13 Newton iteration 12 done13 , maximum relative shift = 5.211e-08
13 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
86 converged value: 1 121 1 let s go get convergedRemote
86 to  comm_.min(converged) 
86 did  comm_.min(converged) convergedRemote: 1
86 final convergedRemote: 1
86 Update: x^(k+1) = x^k - deltax^k 
86 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
86 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
86 Newton iteration 12 done86 , maximum relative shift = 5.211e-08
86 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
71 converged value: 1 121 1 let s go get convergedRemote
71 to  comm_.min(converged) 
71 did  comm_.min(converged) convergedRemote: 1
71 final convergedRemote: 1
71 Update: x^(k+1) = x^k - deltax^k 
71 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
71 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
71 Newton iteration 12 done71 , maximum relative shift = 5.211e-08
71 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
12 converged value: 1 121 1 let s go get convergedRemote
12 to  comm_.min(converged) 
12 did  comm_.min(converged) convergedRemote: 1
12 final convergedRemote: 1
12 Update: x^(k+1) = x^k - deltax^k 
12 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
12 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
12 Newton iteration 12 done12 , maximum relative shift = 5.211e-08
12 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
46 converged value: 1 121 1 let s go get convergedRemote
46 to  comm_.min(converged) 
46 did  comm_.min(converged) convergedRemote: 1
46 final convergedRemote: 1
46 Update: x^(k+1) = x^k - deltax^k 
46 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
46 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
46 Newton iteration 12 done46 , maximum relative shift = 5.211e-08
46 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
94 converged value: 1 121 1 let s go get convergedRemote
94 to  comm_.min(converged) 
94 did  comm_.min(converged) convergedRemote: 1
94 final convergedRemote: 1
94 Update: x^(k+1) = x^k - deltax^k 
94 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
94 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
94 Newton iteration 12 done94 , maximum relative shift = 5.211e-08
94 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
98 converged value: 1 121 1 let s go get convergedRemote
98 to  comm_.min(converged) 
98 did  comm_.min(converged) convergedRemote: 1
98 final convergedRemote: 1
98 Update: x^(k+1) = x^k - deltax^k 
98 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
98 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
98 Newton iteration 12 done98 , maximum relative shift = 5.211e-08
98 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
56 converged value: 1 121 1 let s go get convergedRemote
56 to  comm_.min(converged) 
56 did  comm_.min(converged) convergedRemote: 1
56 final convergedRemote: 1
56 Update: x^(k+1) = x^k - deltax^k 
56 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
56 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
56 Newton iteration 12 done56 , maximum relative shift = 5.211e-08
56 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
38 converged value: 1 121 1 let s go get convergedRemote
38 to  comm_.min(converged) 
38 did  comm_.min(converged) convergedRemote: 1
38 final convergedRemote: 1
38 Update: x^(k+1) = x^k - deltax^k 
38 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
38 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
38 Newton iteration 12 done38 , maximum relative shift = 5.211e-08
38 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
60 converged value: 1 121 1 let s go get convergedRemote
60 to  comm_.min(converged) 
60 did  comm_.min(converged) convergedRemote: 1
60 final convergedRemote: 1
60 Update: x^(k+1) = x^k - deltax^k 
60 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
60 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
60 Newton iteration 12 done60 , maximum relative shift = 5.211e-08
60 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
119 converged value: 1 121 1 let s go get convergedRemote
119 to  comm_.min(converged) 
119 did  comm_.min(converged) convergedRemote: 1
119 final convergedRemote: 1
119 Update: x^(k+1) = x^k - deltax^k 
119 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
119 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
119 Newton iteration 12 done119 , maximum relative shift = 5.211e-08
119 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
45 converged value: 1 121 1 let s go get convergedRemote
45 to  comm_.min(converged) 
45 did  comm_.min(converged) convergedRemote: 1
45 final convergedRemote: 1
45 Update: x^(k+1) = x^k - deltax^k 
45 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
45 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
45 Newton iteration 12 done45 , maximum relative shift = 5.211e-08
45 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
111 converged value: 1 121 1 let s go get convergedRemote
111 to  comm_.min(converged) 
111 did  comm_.min(converged) convergedRemote: 1
111 final convergedRemote: 1
111 Update: x^(k+1) = x^k - deltax^k 
111 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
111 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
111 Newton iteration 12 done111 , maximum relative shift = 5.211e-08
111 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
115 converged value: 1 121 1 let s go get convergedRemote
115 to  comm_.min(converged) 
115 did  comm_.min(converged) convergedRemote: 1
115 final convergedRemote: 1
115 Update: x^(k+1) = x^k - deltax^k 
115 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
115 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
115 Newton iteration 12 done115 , maximum relative shift = 5.211e-08
115 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
89 converged value: 1 121 1 let s go get convergedRemote
89 to  comm_.min(converged) 
89 did  comm_.min(converged) convergedRemote: 1
89 final convergedRemote: 1
89 Update: x^(k+1) = x^k - deltax^k 
89 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
89 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
89 Newton iteration 12 done89 , maximum relative shift = 5.211e-08
89 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
108 converged value: 1 121 1 let s go get convergedRemote
108 to  comm_.min(converged) 
108 did  comm_.min(converged) convergedRemote: 1
108 final convergedRemote: 1
108 Update: x^(k+1) = x^k - deltax^k 
108 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
108 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
108 Newton iteration 12 done108 , maximum relative shift = 5.211e-08
108 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
76 converged value: 1 121 1 let s go get convergedRemote
76 to  comm_.min(converged) 
76 did  comm_.min(converged) convergedRemote: 1
76 final convergedRemote: 1
76 Update: x^(k+1) = x^k - deltax^k 
76 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
76 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
76 Newton iteration 12 done76 , maximum relative shift = 5.211e-08
76 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
54 converged value: 1 121 1 let s go get convergedRemote
54 to  comm_.min(converged) 
54 did  comm_.min(converged) convergedRemote: 1
54 final convergedRemote: 1
54 Update: x^(k+1) = x^k - deltax^k 
54 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
54 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
54 Newton iteration 12 done54 , maximum relative shift = 5.211e-08
54 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
10 converged value: 1 121 1 let s go get convergedRemote
10 to  comm_.min(converged) 
10 did  comm_.min(converged) convergedRemote: 1
10 final convergedRemote: 1
10 Update: x^(k+1) = x^k - deltax^k 
10 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
10 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
10 Newton iteration 12 done10 , maximum relative shift = 5.211e-08
10 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
57 converged value: 1 121 1 let s go get convergedRemote
57 to  comm_.min(converged) 
57 did  comm_.min(converged) convergedRemote: 1
57 final convergedRemote: 1
57 Update: x^(k+1) = x^k - deltax^k 
57 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
57 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
57 Newton iteration 12 done57 , maximum relative shift = 5.211e-08
57 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
120 converged value: 1 121 1 let s go get convergedRemote
120 to  comm_.min(converged) 
120 did  comm_.min(converged) convergedRemote: 1
120 final convergedRemote: 1
120 Update: x^(k+1) = x^k - deltax^k 
120 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
120 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
120 Newton iteration 12 done120 , maximum relative shift = 5.211e-08
120 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
63 converged value: 1 121 1 let s go get convergedRemote
63 to  comm_.min(converged) 
63 did  comm_.min(converged) convergedRemote: 1
63 final convergedRemote: 1
63 Update: x^(k+1) = x^k - deltax^k 
63 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
63 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
63 Newton iteration 12 done63 , maximum relative shift = 5.211e-08
63 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
113 converged value: 1 121 1 let s go get convergedRemote
113 to  comm_.min(converged) 
113 did  comm_.min(converged) convergedRemote: 1
113 final convergedRemote: 1
113 Update: x^(k+1) = x^k - deltax^k 
113 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
113 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
113 Newton iteration 12 done113 , maximum relative shift = 5.211e-08
113 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
114 converged value: 1 121 1 let s go get convergedRemote
114 to  comm_.min(converged) 
114 did  comm_.min(converged) convergedRemote: 1
114 final convergedRemote: 1
114 Update: x^(k+1) = x^k - deltax^k 
114 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
114 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
114 Newton iteration 12 done114 , maximum relative shift = 5.211e-08
114 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
101 converged value: 1 121 1 let s go get convergedRemote
101 to  comm_.min(converged) 
101 did  comm_.min(converged) convergedRemote: 1
101 final convergedRemote: 1
101 Update: x^(k+1) = x^k - deltax^k 
101 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
101 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
101 Newton iteration 12 done101 , maximum relative shift = 5.211e-08
101 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
19 converged value: 1 121 1 let s go get convergedRemote
19 to  comm_.min(converged) 
19 did  comm_.min(converged) convergedRemote: 1
19 final convergedRemote: 1
19 Update: x^(k+1) = x^k - deltax^k 
19 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
19 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
19 Newton iteration 12 done19 , maximum relative shift = 5.211e-08
19 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
1 converged value: 1 121 1 let s go get convergedRemote
1 to  comm_.min(converged) 
1 did  comm_.min(converged) convergedRemote: 1
1 final convergedRemote: 1
1 Update: x^(k+1) = x^k - deltax^k 
1 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
1 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
1 Newton iteration 12 done1 , maximum relative shift = 5.211e-08
1 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
93 converged value: 1 121 1 let s go get convergedRemote
93 to  comm_.min(converged) 
93 did  comm_.min(converged) convergedRemote: 1
93 final convergedRemote: 1
93 Update: x^(k+1) = x^k - deltax^k 
93 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
93 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
93 Newton iteration 12 done93 , maximum relative shift = 5.211e-08
93 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
82 converged value: 1 121 1 let s go get convergedRemote
82 to  comm_.min(converged) 
82 did  comm_.min(converged) convergedRemote: 1
82 final convergedRemote: 1
82 Update: x^(k+1) = x^k - deltax^k 
82 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
82 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
82 Newton iteration 12 done82 , maximum relative shift = 5.211e-08
82 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
117 converged value: 1 121 1 let s go get convergedRemote
117 to  comm_.min(converged) 
117 did  comm_.min(converged) convergedRemote: 1
117 final convergedRemote: 1
117 Update: x^(k+1) = x^k - deltax^k 
117 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
117 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
117 Newton iteration 12 done117 , maximum relative shift = 5.211e-08
117 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
40 Solve: M deltax^k = r 
40 Newton::solveLinearSystem : entering the try section 12
40 in solveLinearSystemImpl_
53 Solve: M deltax^k = r 
53 Newton::solveLinearSystem : entering the try section 12
53 in solveLinearSystemImpl_
88 Solve: M deltax^k = r 
88 Newton::solveLinearSystem : entering the try section 12
88 in solveLinearSystemImpl_
91 Solve: M deltax^k = r 
91 Newton::solveLinearSystem : entering the try section 12
91 in solveLinearSystemImpl_
62 Solve: M deltax^k = r 
62 Newton::solveLinearSystem : entering the try section 12
62 in solveLinearSystemImpl_
3 Solve: M deltax^k = r 
3 Newton::solveLinearSystem : entering the try section 12
3 in solveLinearSystemImpl_
14 Solve: M deltax^k = r 
14 Newton::solveLinearSystem : entering the try section 12
14 in solveLinearSystemImpl_
74 Solve: M deltax^k = r 
74 Newton::solveLinearSystem : entering the try section 12
74 in solveLinearSystemImpl_
67 Solve: M deltax^k = r 
67 Newton::solveLinearSystem : entering the try section 12
67 in solveLinearSystemImpl_
81 Solve: M deltax^k = r 
81 Newton::solveLinearSystem : entering the try section 12
81 in solveLinearSystemImpl_
6 Solve: M deltax^k = r 
6 Newton::solveLinearSystem : entering the try section 12
6 in solveLinearSystemImpl_
118 Solve: M deltax^k = r 
118 Newton::solveLinearSystem : entering the try section 12
118 in solveLinearSystemImpl_
65 Solve: M deltax^k = r 
65 Newton::solveLinearSystem : entering the try section 12
65 in solveLinearSystemImpl_
37 Solve: M deltax^k = r 
37 Newton::solveLinearSystem : entering the try section 12
37 in solveLinearSystemImpl_
92 Solve: M deltax^k = r 
92 Newton::solveLinearSystem : entering the try section 12
92 in solveLinearSystemImpl_
70 Solve: M deltax^k = r 
70 Newton::solveLinearSystem : entering the try section 12
70 in solveLinearSystemImpl_
66 Solve: M deltax^k = r 
66 Newton::solveLinearSystem : entering the try section 12
66 in solveLinearSystemImpl_
84 Solve: M deltax^k = r 
84 Newton::solveLinearSystem : entering the try section 12
84 in solveLinearSystemImpl_
64 Solve: M deltax^k = r 
64 Newton::solveLinearSystem : entering the try section 12
64 in solveLinearSystemImpl_
44 Solve: M deltax^k = r 
44 Newton::solveLinearSystem : entering the try section 12
44 in solveLinearSystemImpl_
110 Solve: M deltax^k = r 
110 Newton::solveLinearSystem : entering the try section 12
110 in solveLinearSystemImpl_
41 Solve: M deltax^k = r 
41 Newton::solveLinearSystem : entering the try section 12
41 in solveLinearSystemImpl_
52 Solve: M deltax^k = r 
52 Newton::solveLinearSystem : entering the try section 12
52 in solveLinearSystemImpl_
100 Solve: M deltax^k = r 
100 Newton::solveLinearSystem : entering the try section 12
100 in solveLinearSystemImpl_
77 Solve: M deltax^k = r 
77 Newton::solveLinearSystem : entering the try section 12
77 in solveLinearSystemImpl_
16 Solve: M deltax^k = r 
16 Newton::solveLinearSystem : entering the try section 12
16 in solveLinearSystemImpl_
49 Solve: M deltax^k = r 
49 Newton::solveLinearSystem : entering the try section 12
49 in solveLinearSystemImpl_
97 Solve: M deltax^k = r 
97 Newton::solveLinearSystem : entering the try section 12
97 in solveLinearSystemImpl_
35 Solve: M deltax^k = r 
35 Newton::solveLinearSystem : entering the try section 12
35 in solveLinearSystemImpl_
7 Solve: M deltax^k = r 
7 Newton::solveLinearSystem : entering the try section 12
7 in solveLinearSystemImpl_
83 Solve: M deltax^k = r 
83 Newton::solveLinearSystem : entering the try section 12
83 in solveLinearSystemImpl_
18 Solve: M deltax^k = r 
18 Newton::solveLinearSystem : entering the try section 12
18 in solveLinearSystemImpl_
27 Solve: M deltax^k = r 
27 Newton::solveLinearSystem : entering the try section 12
27 in solveLinearSystemImpl_
2 Solve: M deltax^k = r 
2 Newton::solveLinearSystem : entering the try section 12
2 in solveLinearSystemImpl_
28 Solve: M deltax^k = r 
28 Newton::solveLinearSystem : entering the try section 12
28 in solveLinearSystemImpl_
13 Solve: M deltax^k = r 
13 Newton::solveLinearSystem : entering the try section 12
13 in solveLinearSystemImpl_
86 Solve: M deltax^k = r 
86 Newton::solveLinearSystem : entering the try section 12
86 in solveLinearSystemImpl_
71 Solve: M deltax^k = r 
71 Newton::solveLinearSystem : entering the try section 12
71 in solveLinearSystemImpl_
12 Solve: M deltax^k = r 
12 Newton::solveLinearSystem : entering the try section 12
12 in solveLinearSystemImpl_
46 Solve: M deltax^k = r 
46 Newton::solveLinearSystem : entering the try section 12
46 in solveLinearSystemImpl_
94 Solve: M deltax^k = r 
94 Newton::solveLinearSystem : entering the try section 12
94 in solveLinearSystemImpl_
98 Solve: M deltax^k = r 
98 Newton::solveLinearSystem : entering the try section 12
98 in solveLinearSystemImpl_
56 Solve: M deltax^k = r 
56 Newton::solveLinearSystem : entering the try section 12
56 in solveLinearSystemImpl_
38 Solve: M deltax^k = r 
38 Newton::solveLinearSystem : entering the try section 12
38 in solveLinearSystemImpl_
60 Solve: M deltax^k = r 
60 Newton::solveLinearSystem : entering the try section 12
60 in solveLinearSystemImpl_
119 Solve: M deltax^k = r 
119 Newton::solveLinearSystem : entering the try section 12
119 in solveLinearSystemImpl_
45 Solve: M deltax^k = r 
45 Newton::solveLinearSystem : entering the try section 12
45 in solveLinearSystemImpl_
111 Solve: M deltax^k = r 
111 Newton::solveLinearSystem : entering the try section 12
111 in solveLinearSystemImpl_
115 Solve: M deltax^k = r 
115 Newton::solveLinearSystem : entering the try section 12
115 in solveLinearSystemImpl_
89 Solve: M deltax^k = r 
89 Newton::solveLinearSystem : entering the try section 12
89 in solveLinearSystemImpl_
108 Solve: M deltax^k = r 
108 Newton::solveLinearSystem : entering the try section 12
108 in solveLinearSystemImpl_
76 Solve: M deltax^k = r 
76 Newton::solveLinearSystem : entering the try section 12
76 in solveLinearSystemImpl_
54 Solve: M deltax^k = r 
54 Newton::solveLinearSystem : entering the try section 12
54 in solveLinearSystemImpl_
10 Solve: M deltax^k = r 
10 Newton::solveLinearSystem : entering the try section 12
10 in solveLinearSystemImpl_
57 Solve: M deltax^k = r 
57 Newton::solveLinearSystem : entering the try section 12
57 in solveLinearSystemImpl_
120 Solve: M deltax^k = r 
120 Newton::solveLinearSystem : entering the try section 12
120 in solveLinearSystemImpl_
117 Solve: M deltax^k = r 
117 Newton::solveLinearSystem : entering the try section 12
117 in solveLinearSystemImpl_
113 Solve: M deltax^k = r 
113 Newton::solveLinearSystem : entering the try section 12
113 in solveLinearSystemImpl_
114 Solve: M deltax^k = r 
114 Newton::solveLinearSystem : entering the try section 12
114 in solveLinearSystemImpl_
101 Solve: M deltax^k = r 
101 Newton::solveLinearSystem : entering the try section 12
101 in solveLinearSystemImpl_
19 Solve: M deltax^k = r 
19 Newton::solveLinearSystem : entering the try section 12
19 in solveLinearSystemImpl_
1 Solve: M deltax^k = r 
1 Newton::solveLinearSystem : entering the try section 12
1 in solveLinearSystemImpl_
93 Solve: M deltax^k = r 
93 Newton::solveLinearSystem : entering the try section 12
93 in solveLinearSystemImpl_
82 Solve: M deltax^k = r 
82 Newton::solveLinearSystem : entering the try section 12
82 in solveLinearSystemImpl_
63 Solve: M deltax^k = r 
63 Newton::solveLinearSystem : entering the try section 12
63 in solveLinearSystemImpl_
48 Solve: M deltax^k = r 
48 Newton::solveLinearSystem : entering the try section 12
48 in solveLinearSystemImpl_
20 Solve: M deltax^k = r 
20 Newton::solveLinearSystem : entering the try section 12
20 in solveLinearSystemImpl_
99 Solve: M deltax^k = r 
99 Newton::solveLinearSystem : entering the try section 12
99 in solveLinearSystemImpl_
24 Solve: M deltax^k = r 
24 Newton::solveLinearSystem : entering the try section 12
24 in solveLinearSystemImpl_
72 Solve: M deltax^k = r 
72 Newton::solveLinearSystem : entering the try section 12
72 in solveLinearSystemImpl_
103 Solve: M deltax^k = r 
103 Newton::solveLinearSystem : entering the try section 12
103 in solveLinearSystemImpl_
55 Solve: M deltax^k = r 
55 Newton::solveLinearSystem : entering the try section 12
55 in solveLinearSystemImpl_
90 Solve: M deltax^k = r 
90 Newton::solveLinearSystem : entering the try section 12
90 in solveLinearSystemImpl_
104 Solve: M deltax^k = r 
104 Newton::solveLinearSystem : entering the try section 12
104 in solveLinearSystemImpl_
39 Solve: M deltax^k = r 
39 Newton::solveLinearSystem : entering the try section 12
39 in solveLinearSystemImpl_
85 Solve: M deltax^k = r 
85 Newton::solveLinearSystem : entering the try section 12
85 in solveLinearSystemImpl_
25 Solve: M deltax^k = r 
25 Newton::solveLinearSystem : entering the try section 12
25 in solveLinearSystemImpl_
36 Solve: M deltax^k = r 
36 Newton::solveLinearSystem : entering the try section 12
36 in solveLinearSystemImpl_
0 Solve: M deltax^k = r 
0 Newton::solveLinearSystem : entering the try section 12
0 in solveLinearSystemImpl_
75 Solve: M deltax^k = r 
75 Newton::solveLinearSystem : entering the try section 12
75 in solveLinearSystemImpl_
68 Solve: M deltax^k = r 
68 Newton::solveLinearSystem : entering the try section 12
68 in solveLinearSystemImpl_
73 Solve: M deltax^k = r 
73 Newton::solveLinearSystem : entering the try section 12
73 in solveLinearSystemImpl_
11 Solve: M deltax^k = r 
11 Newton::solveLinearSystem : entering the try section 12
11 in solveLinearSystemImpl_
112 Solve: M deltax^k = r 
112 Newton::solveLinearSystem : entering the try section 12
112 in solveLinearSystemImpl_
102 Solve: M deltax^k = r 
102 Newton::solveLinearSystem : entering the try section 12
102 in solveLinearSystemImpl_
105 Solve: M deltax^k = r 
105 Newton::solveLinearSystem : entering the try section 12
105 in solveLinearSystemImpl_
59 Solve: M deltax^k = r 
59 Newton::solveLinearSystem : entering the try section 12
59 in solveLinearSystemImpl_
42 Solve: M deltax^k = r 
42 Newton::solveLinearSystem : entering the try section 12
42 in solveLinearSystemImpl_
4 Solve: M deltax^k = r 
4 Newton::solveLinearSystem : entering the try section 12
4 in solveLinearSystemImpl_
79 Solve: M deltax^k = r 
79 Newton::solveLinearSystem : entering the try section 12
79 in solveLinearSystemImpl_
5 Solve: M deltax^k = r 
5 Newton::solveLinearSystem : entering the try section 12
5 in solveLinearSystemImpl_
80 Solve: M deltax^k = r 
80 Newton::solveLinearSystem : entering the try section 12
80 in solveLinearSystemImpl_
87 Solve: M deltax^k = r 
87 Newton::solveLinearSystem : entering the try section 12
87 in solveLinearSystemImpl_
50 Solve: M deltax^k = r 
50 Newton::solveLinearSystem : entering the try section 12
50 in solveLinearSystemImpl_
32 Solve: M deltax^k = r 
32 Newton::solveLinearSystem : entering the try section 12
32 in solveLinearSystemImpl_
109 Solve: M deltax^k = r 
109 Newton::solveLinearSystem : entering the try section 12
109 in solveLinearSystemImpl_
34 Solve: M deltax^k = r 
34 Newton::solveLinearSystem : entering the try section 12
34 in solveLinearSystemImpl_
107 Solve: M deltax^k = r 
107 Newton::solveLinearSystem : entering the try section 12
107 in solveLinearSystemImpl_
106 Solve: M deltax^k = r 
106 Newton::solveLinearSystem : entering the try section 12
106 in solveLinearSystemImpl_
9 Solve: M deltax^k = r 
9 Newton::solveLinearSystem : entering the try section 12
9 in solveLinearSystemImpl_
30 Solve: M deltax^k = r 
30 Newton::solveLinearSystem : entering the try section 12
30 in solveLinearSystemImpl_
51 Solve: M deltax^k = r 
51 Newton::solveLinearSystem : entering the try section 12
51 in solveLinearSystemImpl_
21 Solve: M deltax^k = r 
21 Newton::solveLinearSystem : entering the try section 12
21 in solveLinearSystemImpl_
15 Solve: M deltax^k = r 
15 Newton::solveLinearSystem : entering the try section 12
15 in solveLinearSystemImpl_
33 Solve: M deltax^k = r 
33 Newton::solveLinearSystem : entering the try section 12
33 in solveLinearSystemImpl_
61 Solve: M deltax^k = r 
61 Newton::solveLinearSystem : entering the try section 12
61 in solveLinearSystemImpl_
78 Solve: M deltax^k = r 
78 Newton::solveLinearSystem : entering the try section 12
78 in solveLinearSystemImpl_
22 Solve: M deltax^k = r 
22 Newton::solveLinearSystem : entering the try section 12
22 in solveLinearSystemImpl_
43 Solve: M deltax^k = r 
43 Newton::solveLinearSystem : entering the try section 12
43 in solveLinearSystemImpl_
116 Solve: M deltax^k = r 
116 Newton::solveLinearSystem : entering the try section 12
116 in solveLinearSystemImpl_
26 Solve: M deltax^k = r 
26 Newton::solveLinearSystem : entering the try section 12
26 in solveLinearSystemImpl_
69 Solve: M deltax^k = r 
69 Newton::solveLinearSystem : entering the try section 12
69 in solveLinearSystemImpl_
47 Solve: M deltax^k = r 
47 Newton::solveLinearSystem : entering the try section 12
47 in solveLinearSystemImpl_
95 Solve: M deltax^k = r 
95 Newton::solveLinearSystem : entering the try section 12
95 in solveLinearSystemImpl_
8 Solve: M deltax^k = r 
8 Newton::solveLinearSystem : entering the try section 12
8 in solveLinearSystemImpl_
29 Solve: M deltax^k = r 
29 Newton::solveLinearSystem : entering the try section 12
29 in solveLinearSystemImpl_
31 Solve: M deltax^k = r 
31 Newton::solveLinearSystem : entering the try section 12
31 in solveLinearSystemImpl_
96 Solve: M deltax^k = r 
96 Newton::solveLinearSystem : entering the try section 12
96 in solveLinearSystemImpl_
58 Solve: M deltax^k = r 
58 Newton::solveLinearSystem : entering the try section 12
58 in solveLinearSystemImpl_
17 Solve: M deltax^k = r 
17 Newton::solveLinearSystem : entering the try section 12
17 in solveLinearSystemImpl_
23 Solve: M deltax^k = r 
23 Newton::solveLinearSystem : entering the try section 12
23 in solveLinearSystemImpl_
13 converged value: 1 121 1 let s go get convergedRemote
13 to  comm_.min(converged) 
13 did  comm_.min(converged) convergedRemote: 1
13 final convergedRemote: 1
13 Update: x^(k+1) = x^k - deltax^k 
13 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
13 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
13 Newton iteration 13 done13 , maximum relative shift = 1.757e-08
13 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
86 converged value: 1 121 1 let s go get convergedRemote
86 to  comm_.min(converged) 
86 did  comm_.min(converged) convergedRemote: 1
86 final convergedRemote: 1
86 Update: x^(k+1) = x^k - deltax^k 
86 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
86 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
86 Newton iteration 13 done86 , maximum relative shift = 1.757e-08
86 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
71 converged value: 1 121 1 let s go get convergedRemote
71 to  comm_.min(converged) 
71 did  comm_.min(converged) convergedRemote: 1
71 final convergedRemote: 1
71 Update: x^(k+1) = x^k - deltax^k 
71 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
71 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
71 Newton iteration 13 done71 , maximum relative shift = 1.757e-08
71 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
12 converged value: 1 121 1 let s go get convergedRemote
12 to  comm_.min(converged) 
12 did  comm_.min(converged) convergedRemote: 1
12 final convergedRemote: 1
12 Update: x^(k+1) = x^k - deltax^k 
12 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
12 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
12 Newton iteration 13 done12 , maximum relative shift = 1.757e-08
12 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
46 converged value: 1 121 1 let s go get convergedRemote
46 to  comm_.min(converged) 
46 did  comm_.min(converged) convergedRemote: 1
46 final convergedRemote: 1
46 Update: x^(k+1) = x^k - deltax^k 
46 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
46 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
46 Newton iteration 13 done46 , maximum relative shift = 1.757e-08
46 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
94 converged value: 1 121 1 let s go get convergedRemote
94 to  comm_.min(converged) 
94 did  comm_.min(converged) convergedRemote: 1
94 final convergedRemote: 1
94 Update: x^(k+1) = x^k - deltax^k 
94 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
94 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
94 Newton iteration 13 done94 , maximum relative shift = 1.757e-08
94 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
98 converged value: 1 121 1 let s go get convergedRemote
98 to  comm_.min(converged) 
98 did  comm_.min(converged) convergedRemote: 1
98 final convergedRemote: 1
98 Update: x^(k+1) = x^k - deltax^k 
98 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
98 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
98 Newton iteration 13 done98 , maximum relative shift = 1.757e-08
98 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
56 converged value: 1 121 1 let s go get convergedRemote
56 to  comm_.min(converged) 
56 did  comm_.min(converged) convergedRemote: 1
56 final convergedRemote: 1
56 Update: x^(k+1) = x^k - deltax^k 
56 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
56 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
56 Newton iteration 13 done56 , maximum relative shift = 1.757e-08
56 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
38 converged value: 1 121 1 let s go get convergedRemote
38 to  comm_.min(converged) 
38 did  comm_.min(converged) convergedRemote: 1
38 final convergedRemote: 1
38 Update: x^(k+1) = x^k - deltax^k 
38 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
38 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
38 Newton iteration 13 done38 , maximum relative shift = 1.757e-08
38 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
60 converged value: 1 121 1 let s go get convergedRemote
60 to  comm_.min(converged) 
60 did  comm_.min(converged) convergedRemote: 1
60 final convergedRemote: 1
60 Update: x^(k+1) = x^k - deltax^k 
60 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
60 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
60 Newton iteration 13 done60 , maximum relative shift = 1.757e-08
60 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
119 converged value: 1 121 1 let s go get convergedRemote
119 to  comm_.min(converged) 
119 did  comm_.min(converged) convergedRemote: 1
119 final convergedRemote: 1
119 Update: x^(k+1) = x^k - deltax^k 
119 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
119 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
119 Newton iteration 13 done119 , maximum relative shift = 1.757e-08
119 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
45 converged value: 1 121 1 let s go get convergedRemote
45 to  comm_.min(converged) 
45 did  comm_.min(converged) convergedRemote: 1
45 final convergedRemote: 1
45 Update: x^(k+1) = x^k - deltax^k 
45 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
45 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
45 Newton iteration 13 done45 , maximum relative shift = 1.757e-08
45 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
111 converged value: 1 121 1 let s go get convergedRemote
111 to  comm_.min(converged) 
111 did  comm_.min(converged) convergedRemote: 1
111 final convergedRemote: 1
111 Update: x^(k+1) = x^k - deltax^k 
111 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
111 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
111 Newton iteration 13 done111 , maximum relative shift = 1.757e-08
111 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
115 converged value: 1 121 1 let s go get convergedRemote
115 to  comm_.min(converged) 
115 did  comm_.min(converged) convergedRemote: 1
115 final convergedRemote: 1
115 Update: x^(k+1) = x^k - deltax^k 
115 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
115 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
115 Newton iteration 13 done115 , maximum relative shift = 1.757e-08
115 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
89 converged value: 1 121 1 let s go get convergedRemote
89 to  comm_.min(converged) 
89 did  comm_.min(converged) convergedRemote: 1
89 final convergedRemote: 1
89 Update: x^(k+1) = x^k - deltax^k 
89 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
89 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
89 Newton iteration 13 done89 , maximum relative shift = 1.757e-08
89 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
108 converged value: 1 121 1 let s go get convergedRemote
108 to  comm_.min(converged) 
108 did  comm_.min(converged) convergedRemote: 1
108 final convergedRemote: 1
108 Update: x^(k+1) = x^k - deltax^k 
108 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
108 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
108 Newton iteration 13 done108 , maximum relative shift = 1.757e-08
108 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
76 converged value: 1 121 1 let s go get convergedRemote
76 to  comm_.min(converged) 
76 did  comm_.min(converged) convergedRemote: 1
76 final convergedRemote: 1
76 Update: x^(k+1) = x^k - deltax^k 
76 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
76 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
76 Newton iteration 13 done76 , maximum relative shift = 1.757e-08
76 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
54 converged value: 1 121 1 let s go get convergedRemote
54 to  comm_.min(converged) 
54 did  comm_.min(converged) convergedRemote: 1
54 final convergedRemote: 1
54 Update: x^(k+1) = x^k - deltax^k 
54 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
54 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
54 Newton iteration 13 done54 , maximum relative shift = 1.757e-08
54 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
10 converged value: 1 121 1 let s go get convergedRemote
10 to  comm_.min(converged) 
10 did  comm_.min(converged) convergedRemote: 1
10 final convergedRemote: 1
10 Update: x^(k+1) = x^k - deltax^k 
10 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
10 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
10 Newton iteration 13 done10 , maximum relative shift = 1.757e-08
10 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
57 converged value: 1 121 1 let s go get convergedRemote
57 to  comm_.min(converged) 
57 did  comm_.min(converged) convergedRemote: 1
57 final convergedRemote: 1
57 Update: x^(k+1) = x^k - deltax^k 
57 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
57 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
57 Newton iteration 13 done57 , maximum relative shift = 1.757e-08
57 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
23 converged value: 1 121 1 let s go get convergedRemote
23 to  comm_.min(converged) 
23 did  comm_.min(converged) convergedRemote: 1
23 final convergedRemote: 1
23 Update: x^(k+1) = x^k - deltax^k 
23 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
23 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
23 Newton iteration 13 done23 , maximum relative shift = 1.757e-08
23 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
113 converged value: 1 121 1 let s go get convergedRemote
113 to  comm_.min(converged) 
113 did  comm_.min(converged) convergedRemote: 1
113 final convergedRemote: 1
113 Update: x^(k+1) = x^k - deltax^k 
113 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
113 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
113 Newton iteration 13 done113 , maximum relative shift = 1.757e-08
113 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
114 converged value: 1 121 1 let s go get convergedRemote
114 to  comm_.min(converged) 
114 did  comm_.min(converged) convergedRemote: 1
114 final convergedRemote: 1
114 Update: x^(k+1) = x^k - deltax^k 
114 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
114 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
114 Newton iteration 13 done114 , maximum relative shift = 1.757e-08
114 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
101 converged value: 1 121 1 let s go get convergedRemote
101 to  comm_.min(converged) 
101 did  comm_.min(converged) convergedRemote: 1
101 final convergedRemote: 1
101 Update: x^(k+1) = x^k - deltax^k 
101 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
101 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
101 Newton iteration 13 done101 , maximum relative shift = 1.757e-08
101 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
19 converged value: 1 121 1 let s go get convergedRemote
19 to  comm_.min(converged) 
19 did  comm_.min(converged) convergedRemote: 1
19 final convergedRemote: 1
19 Update: x^(k+1) = x^k - deltax^k 
19 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
19 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
19 Newton iteration 13 done19 , maximum relative shift = 1.757e-08
19 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
1 converged value: 1 121 1 let s go get convergedRemote
1 to  comm_.min(converged) 
1 did  comm_.min(converged) convergedRemote: 1
1 final convergedRemote: 1
1 Update: x^(k+1) = x^k - deltax^k 
1 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
1 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
1 Newton iteration 13 done1 , maximum relative shift = 1.757e-08
1 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
93 converged value: 1 121 1 let s go get convergedRemote
93 to  comm_.min(converged) 
93 did  comm_.min(converged) convergedRemote: 1
93 final convergedRemote: 1
93 Update: x^(k+1) = x^k - deltax^k 
93 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
93 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
93 Newton iteration 13 done93 , maximum relative shift = 1.757e-08
93 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
82 converged value: 1 121 1 let s go get convergedRemote
82 to  comm_.min(converged) 
82 did  comm_.min(converged) convergedRemote: 1
82 final convergedRemote: 1
82 Update: x^(k+1) = x^k - deltax^k 
82 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
82 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
82 Newton iteration 13 done82 , maximum relative shift = 1.757e-08
82 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
63 converged value: 1 121 1 let s go get convergedRemote
63 to  comm_.min(converged) 
63 did  comm_.min(converged) convergedRemote: 1
63 final convergedRemote: 1
63 Update: x^(k+1) = x^k - deltax^k 
63 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
63 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
63 Newton iteration 13 done63 , maximum relative shift = 1.757e-08
63 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
48 converged value: 1 121 1 let s go get convergedRemote
48 to  comm_.min(converged) 
48 did  comm_.min(converged) convergedRemote: 1
48 final convergedRemote: 1
48 Update: x^(k+1) = x^k - deltax^k 
48 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
48 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
48 Newton iteration 13 done48 , maximum relative shift = 1.757e-08
48 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
20 converged value: 1 121 1 let s go get convergedRemote
20 to  comm_.min(converged) 
20 did  comm_.min(converged) convergedRemote: 1
20 final convergedRemote: 1
20 Update: x^(k+1) = x^k - deltax^k 
20 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
20 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
20 Newton iteration 13 done20 , maximum relative shift = 1.757e-08
20 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
99 converged value: 1 121 1 let s go get convergedRemote
99 to  comm_.min(converged) 
99 did  comm_.min(converged) convergedRemote: 1
99 final convergedRemote: 1
99 Update: x^(k+1) = x^k - deltax^k 
99 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
99 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
99 Newton iteration 13 done99 , maximum relative shift = 1.757e-08
99 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
24 converged value: 1 121 1 let s go get convergedRemote
24 to  comm_.min(converged) 
24 did  comm_.min(converged) convergedRemote: 1
24 final convergedRemote: 1
24 Update: x^(k+1) = x^k - deltax^k 
24 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
24 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
24 Newton iteration 13 done24 , maximum relative shift = 1.757e-08
24 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
72 converged value: 1 121 1 let s go get convergedRemote
72 to  comm_.min(converged) 
72 did  comm_.min(converged) convergedRemote: 1
72 final convergedRemote: 1
72 Update: x^(k+1) = x^k - deltax^k 
72 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
72 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
72 Newton iteration 13 done72 , maximum relative shift = 1.757e-08
72 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
103 converged value: 1 121 1 let s go get convergedRemote
103 to  comm_.min(converged) 
103 did  comm_.min(converged) convergedRemote: 1
103 final convergedRemote: 1
103 Update: x^(k+1) = x^k - deltax^k 
103 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
103 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
103 Newton iteration 13 done103 , maximum relative shift = 1.757e-08
103 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
55 converged value: 1 121 1 let s go get convergedRemote
55 to  comm_.min(converged) 
55 did  comm_.min(converged) convergedRemote: 1
55 final convergedRemote: 1
55 Update: x^(k+1) = x^k - deltax^k 
55 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
55 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
55 Newton iteration 13 done55 , maximum relative shift = 1.757e-08
55 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
90 converged value: 1 121 1 let s go get convergedRemote
90 to  comm_.min(converged) 
90 did  comm_.min(converged) convergedRemote: 1
90 final convergedRemote: 1
90 Update: x^(k+1) = x^k - deltax^k 
90 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
90 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
90 Newton iteration 13 done90 , maximum relative shift = 1.757e-08
90 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
104 converged value: 1 121 1 let s go get convergedRemote
104 to  comm_.min(converged) 
104 did  comm_.min(converged) convergedRemote: 1
104 final convergedRemote: 1
104 Update: x^(k+1) = x^k - deltax^k 
104 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
104 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
104 Newton iteration 13 done104 , maximum relative shift = 1.757e-08
104 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
39 converged value: 1 121 1 let s go get convergedRemote
39 to  comm_.min(converged) 
39 did  comm_.min(converged) convergedRemote: 1
39 final convergedRemote: 1
39 Update: x^(k+1) = x^k - deltax^k 
39 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
39 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
39 Newton iteration 13 done39 , maximum relative shift = 1.757e-08
39 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
85 converged value: 1 121 1 let s go get convergedRemote
85 to  comm_.min(converged) 
85 did  comm_.min(converged) convergedRemote: 1
85 final convergedRemote: 1
85 Update: x^(k+1) = x^k - deltax^k 
85 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
85 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
85 Newton iteration 13 done85 , maximum relative shift = 1.757e-08
85 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
25 converged value: 1 121 1 let s go get convergedRemote
25 to  comm_.min(converged) 
25 did  comm_.min(converged) convergedRemote: 1
25 final convergedRemote: 1
25 Update: x^(k+1) = x^k - deltax^k 
25 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
25 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
25 Newton iteration 13 done25 , maximum relative shift = 1.757e-08
25 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
36 converged value: 1 121 1 let s go get convergedRemote
36 to  comm_.min(converged) 
36 did  comm_.min(converged) convergedRemote: 1
36 final convergedRemote: 1
36 Update: x^(k+1) = x^k - deltax^k 
36 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
36 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
36 Newton iteration 13 done36 , maximum relative shift = 1.757e-08
36 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
0 converged value: 1 121 1 let s go get convergedRemote
0 to  comm_.min(converged) 
0 did  comm_.min(converged) convergedRemote: 1
0 final convergedRemote: 1
0 Update: x^(k+1) = x^k - deltax^k 
0 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
0 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
0 Newton iteration 13 done0 , maximum relative shift = 1.757e-08
0 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
75 converged value: 1 121 1 let s go get convergedRemote
75 to  comm_.min(converged) 
75 did  comm_.min(converged) convergedRemote: 1
75 final convergedRemote: 1
75 Update: x^(k+1) = x^k - deltax^k 
75 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
75 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
75 Newton iteration 13 done75 , maximum relative shift = 1.757e-08
75 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
68 converged value: 1 121 1 let s go get convergedRemote
68 to  comm_.min(converged) 
68 did  comm_.min(converged) convergedRemote: 1
68 final convergedRemote: 1
68 Update: x^(k+1) = x^k - deltax^k 
68 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
68 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
68 Newton iteration 13 done68 , maximum relative shift = 1.757e-08
68 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
73 converged value: 1 121 1 let s go get convergedRemote
73 to  comm_.min(converged) 
73 did  comm_.min(converged) convergedRemote: 1
73 final convergedRemote: 1
73 Update: x^(k+1) = x^k - deltax^k 
73 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
73 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
73 Newton iteration 13 done73 , maximum relative shift = 1.757e-08
73 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
11 converged value: 1 121 1 let s go get convergedRemote
11 to  comm_.min(converged) 
11 did  comm_.min(converged) convergedRemote: 1
11 final convergedRemote: 1
11 Update: x^(k+1) = x^k - deltax^k 
11 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
11 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
11 Newton iteration 13 done11 , maximum relative shift = 1.757e-08
11 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
112 converged value: 1 121 1 let s go get convergedRemote
112 to  comm_.min(converged) 
112 did  comm_.min(converged) convergedRemote: 1
112 final convergedRemote: 1
112 Update: x^(k+1) = x^k - deltax^k 
112 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
112 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
112 Newton iteration 13 done112 , maximum relative shift = 1.757e-08
112 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
102 converged value: 1 121 1 let s go get convergedRemote
102 to  comm_.min(converged) 
102 did  comm_.min(converged) convergedRemote: 1
102 final convergedRemote: 1
102 Update: x^(k+1) = x^k - deltax^k 
102 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
102 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
102 Newton iteration 13 done102 , maximum relative shift = 1.757e-08
102 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
105 converged value: 1 121 1 let s go get convergedRemote
105 to  comm_.min(converged) 
105 did  comm_.min(converged) convergedRemote: 1
105 final convergedRemote: 1
105 Update: x^(k+1) = x^k - deltax^k 
105 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
105 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
105 Newton iteration 13 done105 , maximum relative shift = 1.757e-08
105 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
59 converged value: 1 121 1 let s go get convergedRemote
59 to  comm_.min(converged) 
59 did  comm_.min(converged) convergedRemote: 1
59 final convergedRemote: 1
59 Update: x^(k+1) = x^k - deltax^k 
59 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
59 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
59 Newton iteration 13 done59 , maximum relative shift = 1.757e-08
59 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
42 converged value: 1 121 1 let s go get convergedRemote
42 to  comm_.min(converged) 
42 did  comm_.min(converged) convergedRemote: 1
42 final convergedRemote: 1
42 Update: x^(k+1) = x^k - deltax^k 
42 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
42 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
42 Newton iteration 13 done42 , maximum relative shift = 1.757e-08
42 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
4 converged value: 1 121 1 let s go get convergedRemote
4 to  comm_.min(converged) 
4 did  comm_.min(converged) convergedRemote: 1
4 final convergedRemote: 1
4 Update: x^(k+1) = x^k - deltax^k 
4 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
4 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
4 Newton iteration 13 done4 , maximum relative shift = 1.757e-08
4 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
79 converged value: 1 121 1 let s go get convergedRemote
79 to  comm_.min(converged) 
79 did  comm_.min(converged) convergedRemote: 1
79 final convergedRemote: 1
79 Update: x^(k+1) = x^k - deltax^k 
79 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
79 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
79 Newton iteration 13 done79 , maximum relative shift = 1.757e-08
79 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
5 converged value: 1 121 1 let s go get convergedRemote
5 to  comm_.min(converged) 
5 did  comm_.min(converged) convergedRemote: 1
5 final convergedRemote: 1
5 Update: x^(k+1) = x^k - deltax^k 
5 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
5 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
5 Newton iteration 13 done5 , maximum relative shift = 1.757e-08
5 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
80 converged value: 1 121 1 let s go get convergedRemote
80 to  comm_.min(converged) 
80 did  comm_.min(converged) convergedRemote: 1
80 final convergedRemote: 1
80 Update: x^(k+1) = x^k - deltax^k 
80 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
80 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
80 Newton iteration 13 done80 , maximum relative shift = 1.757e-08
80 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
87 converged value: 1 121 1 let s go get convergedRemote
87 to  comm_.min(converged) 
87 did  comm_.min(converged) convergedRemote: 1
87 final convergedRemote: 1
87 Update: x^(k+1) = x^k - deltax^k 
87 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
87 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
87 Newton iteration 13 done87 , maximum relative shift = 1.757e-08
87 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
50 converged value: 1 121 1 let s go get convergedRemote
50 to  comm_.min(converged) 
50 did  comm_.min(converged) convergedRemote: 1
50 final convergedRemote: 1
50 Update: x^(k+1) = x^k - deltax^k 
50 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
50 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
50 Newton iteration 13 done50 , maximum relative shift = 1.757e-08
50 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
32 converged value: 1 121 1 let s go get convergedRemote
32 to  comm_.min(converged) 
32 did  comm_.min(converged) convergedRemote: 1
32 final convergedRemote: 1
32 Update: x^(k+1) = x^k - deltax^k 
32 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
32 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
32 Newton iteration 13 done32 , maximum relative shift = 1.757e-08
32 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
109 converged value: 1 121 1 let s go get convergedRemote
109 to  comm_.min(converged) 
109 did  comm_.min(converged) convergedRemote: 1
109 final convergedRemote: 1
109 Update: x^(k+1) = x^k - deltax^k 
109 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
109 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
109 Newton iteration 13 done109 , maximum relative shift = 1.757e-08
109 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
34 converged value: 1 121 1 let s go get convergedRemote
34 to  comm_.min(converged) 
34 did  comm_.min(converged) convergedRemote: 1
34 final convergedRemote: 1
34 Update: x^(k+1) = x^k - deltax^k 
34 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
34 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
34 Newton iteration 13 done34 , maximum relative shift = 1.757e-08
34 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
107 converged value: 1 121 1 let s go get convergedRemote
107 to  comm_.min(converged) 
107 did  comm_.min(converged) convergedRemote: 1
107 final convergedRemote: 1
107 Update: x^(k+1) = x^k - deltax^k 
107 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
107 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
107 Newton iteration 13 done107 , maximum relative shift = 1.757e-08
107 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
106 converged value: 1 121 1 let s go get convergedRemote
106 to  comm_.min(converged) 
106 did  comm_.min(converged) convergedRemote: 1
106 final convergedRemote: 1
106 Update: x^(k+1) = x^k - deltax^k 
106 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
106 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
106 Newton iteration 13 done106 , maximum relative shift = 1.757e-08
106 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
9 converged value: 1 121 1 let s go get convergedRemote
9 to  comm_.min(converged) 
9 did  comm_.min(converged) convergedRemote: 1
9 final convergedRemote: 1
9 Update: x^(k+1) = x^k - deltax^k 
9 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
9 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
9 Newton iteration 13 done9 , maximum relative shift = 1.757e-08
9 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
30 converged value: 1 121 1 let s go get convergedRemote
30 to  comm_.min(converged) 
30 did  comm_.min(converged) convergedRemote: 1
30 final convergedRemote: 1
30 Update: x^(k+1) = x^k - deltax^k 
30 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
30 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
30 Newton iteration 13 done30 , maximum relative shift = 1.757e-08
30 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
51 converged value: 1 121 1 let s go get convergedRemote
51 to  comm_.min(converged) 
51 did  comm_.min(converged) convergedRemote: 1
51 final convergedRemote: 1
51 Update: x^(k+1) = x^k - deltax^k 
51 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
51 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
51 Newton iteration 13 done51 , maximum relative shift = 1.757e-08
51 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
21 converged value: 1 121 1 let s go get convergedRemote
21 to  comm_.min(converged) 
21 did  comm_.min(converged) convergedRemote: 1
21 final convergedRemote: 1
21 Update: x^(k+1) = x^k - deltax^k 
21 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
21 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
21 Newton iteration 13 done21 , maximum relative shift = 1.757e-08
21 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
15 converged value: 1 121 1 let s go get convergedRemote
15 to  comm_.min(converged) 
15 did  comm_.min(converged) convergedRemote: 1
15 final convergedRemote: 1
15 Update: x^(k+1) = x^k - deltax^k 
15 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
15 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
15 Newton iteration 13 done15 , maximum relative shift = 1.757e-08
15 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
33 converged value: 1 121 1 let s go get convergedRemote
33 to  comm_.min(converged) 
33 did  comm_.min(converged) convergedRemote: 1
33 final convergedRemote: 1
33 Update: x^(k+1) = x^k - deltax^k 
33 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
33 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
33 Newton iteration 13 done33 , maximum relative shift = 1.757e-08
33 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
61 converged value: 1 121 1 let s go get convergedRemote
61 to  comm_.min(converged) 
61 did  comm_.min(converged) convergedRemote: 1
61 final convergedRemote: 1
61 Update: x^(k+1) = x^k - deltax^k 
61 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
61 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
61 Newton iteration 13 done61 , maximum relative shift = 1.757e-08
61 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
78 converged value: 1 121 1 let s go get convergedRemote
78 to  comm_.min(converged) 
78 did  comm_.min(converged) convergedRemote: 1
78 final convergedRemote: 1
78 Update: x^(k+1) = x^k - deltax^k 
78 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
78 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
78 Newton iteration 13 done78 , maximum relative shift = 1.757e-08
78 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
22 converged value: 1 121 1 let s go get convergedRemote
22 to  comm_.min(converged) 
22 did  comm_.min(converged) convergedRemote: 1
22 final convergedRemote: 1
22 Update: x^(k+1) = x^k - deltax^k 
22 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
22 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
22 Newton iteration 13 done22 , maximum relative shift = 1.757e-08
22 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
43 converged value: 1 121 1 let s go get convergedRemote
43 to  comm_.min(converged) 
43 did  comm_.min(converged) convergedRemote: 1
43 final convergedRemote: 1
43 Update: x^(k+1) = x^k - deltax^k 
43 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
43 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
43 Newton iteration 13 done43 , maximum relative shift = 1.757e-08
43 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
116 converged value: 1 121 1 let s go get convergedRemote
116 to  comm_.min(converged) 
116 did  comm_.min(converged) convergedRemote: 1
116 final convergedRemote: 1
116 Update: x^(k+1) = x^k - deltax^k 
116 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
116 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
116 Newton iteration 13 done116 , maximum relative shift = 1.757e-08
116 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
26 converged value: 1 121 1 let s go get convergedRemote
26 to  comm_.min(converged) 
26 did  comm_.min(converged) convergedRemote: 1
26 final convergedRemote: 1
26 Update: x^(k+1) = x^k - deltax^k 
26 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
26 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
26 Newton iteration 13 done26 , maximum relative shift = 1.757e-08
26 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
69 converged value: 1 121 1 let s go get convergedRemote
69 to  comm_.min(converged) 
69 did  comm_.min(converged) convergedRemote: 1
69 final convergedRemote: 1
69 Update: x^(k+1) = x^k - deltax^k 
69 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
69 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
69 Newton iteration 13 done69 , maximum relative shift = 1.757e-08
69 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
47 converged value: 1 121 1 let s go get convergedRemote
47 to  comm_.min(converged) 
47 did  comm_.min(converged) convergedRemote: 1
47 final convergedRemote: 1
47 Update: x^(k+1) = x^k - deltax^k 
47 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
47 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
47 Newton iteration 13 done47 , maximum relative shift = 1.757e-08
47 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
95 converged value: 1 121 1 let s go get convergedRemote
95 to  comm_.min(converged) 
95 did  comm_.min(converged) convergedRemote: 1
95 final convergedRemote: 1
95 Update: x^(k+1) = x^k - deltax^k 
95 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
95 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
95 Newton iteration 13 done95 , maximum relative shift = 1.757e-08
95 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
8 converged value: 1 121 1 let s go get convergedRemote
8 to  comm_.min(converged) 
8 did  comm_.min(converged) convergedRemote: 1
8 final convergedRemote: 1
8 Update: x^(k+1) = x^k - deltax^k 
8 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
8 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
8 Newton iteration 13 done8 , maximum relative shift = 1.757e-08
8 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
29 converged value: 1 121 1 let s go get convergedRemote
29 to  comm_.min(converged) 
29 did  comm_.min(converged) convergedRemote: 1
29 final convergedRemote: 1
29 Update: x^(k+1) = x^k - deltax^k 
29 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
29 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
29 Newton iteration 13 done29 , maximum relative shift = 1.757e-08
29 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
31 converged value: 1 121 1 let s go get convergedRemote
31 to  comm_.min(converged) 
31 did  comm_.min(converged) convergedRemote: 1
31 final convergedRemote: 1
31 Update: x^(k+1) = x^k - deltax^k 
31 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
31 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
31 Newton iteration 13 done31 , maximum relative shift = 1.757e-08
31 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
96 converged value: 1 121 1 let s go get convergedRemote
96 to  comm_.min(converged) 
96 did  comm_.min(converged) convergedRemote: 1
96 final convergedRemote: 1
96 Update: x^(k+1) = x^k - deltax^k 
96 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
96 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
96 Newton iteration 13 done96 , maximum relative shift = 1.757e-08
96 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
58 converged value: 1 121 1 let s go get convergedRemote
58 to  comm_.min(converged) 
58 did  comm_.min(converged) convergedRemote: 1
58 final convergedRemote: 1
58 Update: x^(k+1) = x^k - deltax^k 
58 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
58 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
58 Newton iteration 13 done58 , maximum relative shift = 1.757e-08
58 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
17 converged value: 1 121 1 let s go get convergedRemote
17 to  comm_.min(converged) 
17 did  comm_.min(converged) convergedRemote: 1
17 final convergedRemote: 1
17 Update: x^(k+1) = x^k - deltax^k 
17 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
17 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
17 Newton iteration 13 done17 , maximum relative shift = 1.757e-08
17 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
120 converged value: 1 121 1 let s go get convergedRemote
120 to  comm_.min(converged) 
120 did  comm_.min(converged) convergedRemote: 1
120 final convergedRemote: 1
120 Update: x^(k+1) = x^k - deltax^k 
120 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
120 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
120 Newton iteration 13 done120 , maximum relative shift = 1.757e-08
120 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
40 converged value: 1 121 1 let s go get convergedRemote
40 to  comm_.min(converged) 
40 did  comm_.min(converged) convergedRemote: 1
40 final convergedRemote: 1
40 Update: x^(k+1) = x^k - deltax^k 
40 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
40 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
40 Newton iteration 13 done40 , maximum relative shift = 1.757e-08
40 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
53 converged value: 1 121 1 let s go get convergedRemote
53 to  comm_.min(converged) 
53 did  comm_.min(converged) convergedRemote: 1
53 final convergedRemote: 1
53 Update: x^(k+1) = x^k - deltax^k 
53 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
53 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
53 Newton iteration 13 done53 , maximum relative shift = 1.757e-08
53 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
88 converged value: 1 121 1 let s go get convergedRemote
88 to  comm_.min(converged) 
88 did  comm_.min(converged) convergedRemote: 1
88 final convergedRemote: 1
88 Update: x^(k+1) = x^k - deltax^k 
88 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
88 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
88 Newton iteration 13 done88 , maximum relative shift = 1.757e-08
88 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
91 converged value: 1 121 1 let s go get convergedRemote
91 to  comm_.min(converged) 
91 did  comm_.min(converged) convergedRemote: 1
91 final convergedRemote: 1
91 Update: x^(k+1) = x^k - deltax^k 
91 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
91 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
91 Newton iteration 13 done91 , maximum relative shift = 1.757e-08
91 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
62 converged value: 1 121 1 let s go get convergedRemote
62 to  comm_.min(converged) 
62 did  comm_.min(converged) convergedRemote: 1
62 final convergedRemote: 1
62 Update: x^(k+1) = x^k - deltax^k 
62 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
62 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
62 Newton iteration 13 done62 , maximum relative shift = 1.757e-08
62 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
3 converged value: 1 121 1 let s go get convergedRemote
3 to  comm_.min(converged) 
3 did  comm_.min(converged) convergedRemote: 1
3 final convergedRemote: 1
3 Update: x^(k+1) = x^k - deltax^k 
3 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
3 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
3 Newton iteration 13 done3 , maximum relative shift = 1.757e-08
3 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
14 converged value: 1 121 1 let s go get convergedRemote
14 to  comm_.min(converged) 
14 did  comm_.min(converged) convergedRemote: 1
14 final convergedRemote: 1
14 Update: x^(k+1) = x^k - deltax^k 
14 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
14 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
14 Newton iteration 13 done14 , maximum relative shift = 1.757e-08
14 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
74 converged value: 1 121 1 let s go get convergedRemote
74 to  comm_.min(converged) 
74 did  comm_.min(converged) convergedRemote: 1
74 final convergedRemote: 1
74 Update: x^(k+1) = x^k - deltax^k 
74 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
74 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
74 Newton iteration 13 done74 , maximum relative shift = 1.757e-08
74 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
67 converged value: 1 121 1 let s go get convergedRemote
67 to  comm_.min(converged) 
67 did  comm_.min(converged) convergedRemote: 1
67 final convergedRemote: 1
67 Update: x^(k+1) = x^k - deltax^k 
67 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
67 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
67 Newton iteration 13 done67 , maximum relative shift = 1.757e-08
67 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
81 converged value: 1 121 1 let s go get convergedRemote
81 to  comm_.min(converged) 
81 did  comm_.min(converged) convergedRemote: 1
81 final convergedRemote: 1
81 Update: x^(k+1) = x^k - deltax^k 
81 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
81 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
81 Newton iteration 13 done81 , maximum relative shift = 1.757e-08
81 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
6 converged value: 1 121 1 let s go get convergedRemote
6 to  comm_.min(converged) 
6 did  comm_.min(converged) convergedRemote: 1
6 final convergedRemote: 1
6 Update: x^(k+1) = x^k - deltax^k 
6 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
6 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
6 Newton iteration 13 done6 , maximum relative shift = 1.757e-08
6 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
118 converged value: 1 121 1 let s go get convergedRemote
118 to  comm_.min(converged) 
118 did  comm_.min(converged) convergedRemote: 1
118 final convergedRemote: 1
118 Update: x^(k+1) = x^k - deltax^k 
118 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
118 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
118 Newton iteration 13 done118 , maximum relative shift = 1.757e-08
118 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
65 converged value: 1 121 1 let s go get convergedRemote
65 to  comm_.min(converged) 
65 did  comm_.min(converged) convergedRemote: 1
65 final convergedRemote: 1
65 Update: x^(k+1) = x^k - deltax^k 
65 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
65 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
65 Newton iteration 13 done65 , maximum relative shift = 1.757e-08
65 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
37 converged value: 1 121 1 let s go get convergedRemote
37 to  comm_.min(converged) 
37 did  comm_.min(converged) convergedRemote: 1
37 final convergedRemote: 1
37 Update: x^(k+1) = x^k - deltax^k 
37 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
37 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
37 Newton iteration 13 done37 , maximum relative shift = 1.757e-08
37 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
92 converged value: 1 121 1 let s go get convergedRemote
92 to  comm_.min(converged) 
92 did  comm_.min(converged) convergedRemote: 1
92 final convergedRemote: 1
92 Update: x^(k+1) = x^k - deltax^k 
92 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
92 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
92 Newton iteration 13 done92 , maximum relative shift = 1.757e-08
92 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
70 converged value: 1 121 1 let s go get convergedRemote
70 to  comm_.min(converged) 
70 did  comm_.min(converged) convergedRemote: 1
70 final convergedRemote: 1
70 Update: x^(k+1) = x^k - deltax^k 
70 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
70 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
70 Newton iteration 13 done70 , maximum relative shift = 1.757e-08
70 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
66 converged value: 1 121 1 let s go get convergedRemote
66 to  comm_.min(converged) 
66 did  comm_.min(converged) convergedRemote: 1
66 final convergedRemote: 1
66 Update: x^(k+1) = x^k - deltax^k 
66 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
66 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
66 Newton iteration 13 done66 , maximum relative shift = 1.757e-08
66 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
84 converged value: 1 121 1 let s go get convergedRemote
84 to  comm_.min(converged) 
84 did  comm_.min(converged) convergedRemote: 1
84 final convergedRemote: 1
84 Update: x^(k+1) = x^k - deltax^k 
84 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
84 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
84 Newton iteration 13 done84 , maximum relative shift = 1.757e-08
84 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
64 converged value: 1 121 1 let s go get convergedRemote
64 to  comm_.min(converged) 
64 did  comm_.min(converged) convergedRemote: 1
64 final convergedRemote: 1
64 Update: x^(k+1) = x^k - deltax^k 
64 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
64 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
64 Newton iteration 13 done64 , maximum relative shift = 1.757e-08
64 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
44 converged value: 1 121 1 let s go get convergedRemote
44 to  comm_.min(converged) 
44 did  comm_.min(converged) convergedRemote: 1
44 final convergedRemote: 1
44 Update: x^(k+1) = x^k - deltax^k 
44 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
44 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
44 Newton iteration 13 done44 , maximum relative shift = 1.757e-08
44 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
110 converged value: 1 121 1 let s go get convergedRemote
110 to  comm_.min(converged) 
110 did  comm_.min(converged) convergedRemote: 1
110 final convergedRemote: 1
110 Update: x^(k+1) = x^k - deltax^k 
110 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
110 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
110 Newton iteration 13 done110 , maximum relative shift = 1.757e-08
110 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
41 converged value: 1 121 1 let s go get convergedRemote
41 to  comm_.min(converged) 
41 did  comm_.min(converged) convergedRemote: 1
41 final convergedRemote: 1
41 Update: x^(k+1) = x^k - deltax^k 
41 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
41 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
41 Newton iteration 13 done41 , maximum relative shift = 1.757e-08
41 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
52 converged value: 1 121 1 let s go get convergedRemote
52 to  comm_.min(converged) 
52 did  comm_.min(converged) convergedRemote: 1
52 final convergedRemote: 1
52 Update: x^(k+1) = x^k - deltax^k 
52 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
52 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
52 Newton iteration 13 done52 , maximum relative shift = 1.757e-08
52 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
100 converged value: 1 121 1 let s go get convergedRemote
100 to  comm_.min(converged) 
100 did  comm_.min(converged) convergedRemote: 1
100 final convergedRemote: 1
100 Update: x^(k+1) = x^k - deltax^k 
100 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
100 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
100 Newton iteration 13 done100 , maximum relative shift = 1.757e-08
100 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
77 converged value: 1 121 1 let s go get convergedRemote
77 to  comm_.min(converged) 
77 did  comm_.min(converged) convergedRemote: 1
77 final convergedRemote: 1
77 Update: x^(k+1) = x^k - deltax^k 
77 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
77 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
77 Newton iteration 13 done77 , maximum relative shift = 1.757e-08
77 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
16 converged value: 1 121 1 let s go get convergedRemote
16 to  comm_.min(converged) 
16 did  comm_.min(converged) convergedRemote: 1
16 final convergedRemote: 1
16 Update: x^(k+1) = x^k - deltax^k 
16 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
16 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
16 Newton iteration 13 done16 , maximum relative shift = 1.757e-08
16 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
49 converged value: 1 121 1 let s go get convergedRemote
49 to  comm_.min(converged) 
49 did  comm_.min(converged) convergedRemote: 1
49 final convergedRemote: 1
49 Update: x^(k+1) = x^k - deltax^k 
49 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
49 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
49 Newton iteration 13 done49 , maximum relative shift = 1.757e-08
49 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
97 converged value: 1 121 1 let s go get convergedRemote
97 to  comm_.min(converged) 
97 did  comm_.min(converged) convergedRemote: 1
97 final convergedRemote: 1
97 Update: x^(k+1) = x^k - deltax^k 
97 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
97 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
97 Newton iteration 13 done97 , maximum relative shift = 1.757e-08
97 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
35 converged value: 1 121 1 let s go get convergedRemote
35 to  comm_.min(converged) 
35 did  comm_.min(converged) convergedRemote: 1
35 final convergedRemote: 1
35 Update: x^(k+1) = x^k - deltax^k 
35 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
35 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
35 Newton iteration 13 done35 , maximum relative shift = 1.757e-08
35 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
7 converged value: 1 121 1 let s go get convergedRemote
7 to  comm_.min(converged) 
7 did  comm_.min(converged) convergedRemote: 1
7 final convergedRemote: 1
7 Update: x^(k+1) = x^k - deltax^k 
7 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
7 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
7 Newton iteration 13 done7 , maximum relative shift = 1.757e-08
7 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
83 converged value: 1 121 1 let s go get convergedRemote
83 to  comm_.min(converged) 
83 did  comm_.min(converged) convergedRemote: 1
83 final convergedRemote: 1
83 Update: x^(k+1) = x^k - deltax^k 
83 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
83 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
83 Newton iteration 13 done83 , maximum relative shift = 1.757e-08
83 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
18 converged value: 1 121 1 let s go get convergedRemote
18 to  comm_.min(converged) 
18 did  comm_.min(converged) convergedRemote: 1
18 final convergedRemote: 1
18 Update: x^(k+1) = x^k - deltax^k 
18 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
18 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
18 Newton iteration 13 done18 , maximum relative shift = 1.757e-08
18 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
27 converged value: 1 121 1 let s go get convergedRemote
27 to  comm_.min(converged) 
27 did  comm_.min(converged) convergedRemote: 1
27 final convergedRemote: 1
27 Update: x^(k+1) = x^k - deltax^k 
27 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
27 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
27 Newton iteration 13 done27 , maximum relative shift = 1.757e-08
27 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
2 converged value: 1 121 1 let s go get convergedRemote
2 to  comm_.min(converged) 
2 did  comm_.min(converged) convergedRemote: 1
2 final convergedRemote: 1
2 Update: x^(k+1) = x^k - deltax^k 
2 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
2 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
2 Newton iteration 13 done2 , maximum relative shift = 1.757e-08
2 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
28 converged value: 1 121 1 let s go get convergedRemote
28 to  comm_.min(converged) 
28 did  comm_.min(converged) convergedRemote: 1
28 final convergedRemote: 1
28 Update: x^(k+1) = x^k - deltax^k 
28 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
28 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
28 Newton iteration 13 done28 , maximum relative shift = 1.757e-08
28 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
117 converged value: 1 121 1 let s go get convergedRemote
117 to  comm_.min(converged) 
117 did  comm_.min(converged) convergedRemote: 1
117 final convergedRemote: 1
117 Update: x^(k+1) = x^k - deltax^k 
117 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
117 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
117 Newton iteration 13 done117 , maximum relative shift = 1.757e-08
117 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
90 Solve: M deltax^k = r 
90 Newton::solveLinearSystem : entering the try section 13
90 in solveLinearSystemImpl_
104 Solve: M deltax^k = r 
104 Newton::solveLinearSystem : entering the try section 13
104 in solveLinearSystemImpl_
39 Solve: M deltax^k = r 
39 Newton::solveLinearSystem : entering the try section 13
39 in solveLinearSystemImpl_
85 Solve: M deltax^k = r 
85 Newton::solveLinearSystem : entering the try section 13
85 in solveLinearSystemImpl_
25 Solve: M deltax^k = r 
25 Newton::solveLinearSystem : entering the try section 13
25 in solveLinearSystemImpl_
36 Solve: M deltax^k = r 
36 Newton::solveLinearSystem : entering the try section 13
36 in solveLinearSystemImpl_
0 Solve: M deltax^k = r 
0 Newton::solveLinearSystem : entering the try section 13
0 in solveLinearSystemImpl_
75 Solve: M deltax^k = r 
75 Newton::solveLinearSystem : entering the try section 13
75 in solveLinearSystemImpl_
68 Solve: M deltax^k = r 
68 Newton::solveLinearSystem : entering the try section 13
68 in solveLinearSystemImpl_
73 Solve: M deltax^k = r 
73 Newton::solveLinearSystem : entering the try section 13
73 in solveLinearSystemImpl_
11 Solve: M deltax^k = r 
11 Newton::solveLinearSystem : entering the try section 13
11 in solveLinearSystemImpl_
112 Solve: M deltax^k = r 
112 Newton::solveLinearSystem : entering the try section 13
112 in solveLinearSystemImpl_
102 Solve: M deltax^k = r 
102 Newton::solveLinearSystem : entering the try section 13
102 in solveLinearSystemImpl_
105 Solve: M deltax^k = r 
105 Newton::solveLinearSystem : entering the try section 13
105 in solveLinearSystemImpl_
59 Solve: M deltax^k = r 
59 Newton::solveLinearSystem : entering the try section 13
59 in solveLinearSystemImpl_
42 Solve: M deltax^k = r 
42 Newton::solveLinearSystem : entering the try section 13
42 in solveLinearSystemImpl_
4 Solve: M deltax^k = r 
4 Newton::solveLinearSystem : entering the try section 13
4 in solveLinearSystemImpl_
79 Solve: M deltax^k = r 
79 Newton::solveLinearSystem : entering the try section 13
79 in solveLinearSystemImpl_
5 Solve: M deltax^k = r 
5 Newton::solveLinearSystem : entering the try section 13
5 in solveLinearSystemImpl_
80 Solve: M deltax^k = r 
80 Newton::solveLinearSystem : entering the try section 13
80 in solveLinearSystemImpl_
87 Solve: M deltax^k = r 
87 Newton::solveLinearSystem : entering the try section 13
87 in solveLinearSystemImpl_
50 Solve: M deltax^k = r 
50 Newton::solveLinearSystem : entering the try section 13
50 in solveLinearSystemImpl_
32 Solve: M deltax^k = r 
32 Newton::solveLinearSystem : entering the try section 13
32 in solveLinearSystemImpl_
109 Solve: M deltax^k = r 
109 Newton::solveLinearSystem : entering the try section 13
109 in solveLinearSystemImpl_
34 Solve: M deltax^k = r 
34 Newton::solveLinearSystem : entering the try section 13
34 in solveLinearSystemImpl_
107 Solve: M deltax^k = r 
107 Newton::solveLinearSystem : entering the try section 13
107 in solveLinearSystemImpl_
106 Solve: M deltax^k = r 
106 Newton::solveLinearSystem : entering the try section 13
106 in solveLinearSystemImpl_
9 Solve: M deltax^k = r 
9 Newton::solveLinearSystem : entering the try section 13
9 in solveLinearSystemImpl_
30 Solve: M deltax^k = r 
30 Newton::solveLinearSystem : entering the try section 13
30 in solveLinearSystemImpl_
51 Solve: M deltax^k = r 
51 Newton::solveLinearSystem : entering the try section 13
51 in solveLinearSystemImpl_
21 Solve: M deltax^k = r 
21 Newton::solveLinearSystem : entering the try section 13
21 in solveLinearSystemImpl_
15 Solve: M deltax^k = r 
15 Newton::solveLinearSystem : entering the try section 13
15 in solveLinearSystemImpl_
33 Solve: M deltax^k = r 
33 Newton::solveLinearSystem : entering the try section 13
33 in solveLinearSystemImpl_
61 Solve: M deltax^k = r 
61 Newton::solveLinearSystem : entering the try section 13
61 in solveLinearSystemImpl_
78 Solve: M deltax^k = r 
78 Newton::solveLinearSystem : entering the try section 13
78 in solveLinearSystemImpl_
22 Solve: M deltax^k = r 
22 Newton::solveLinearSystem : entering the try section 13
22 in solveLinearSystemImpl_
43 Solve: M deltax^k = r 
43 Newton::solveLinearSystem : entering the try section 13
43 in solveLinearSystemImpl_
116 Solve: M deltax^k = r 
116 Newton::solveLinearSystem : entering the try section 13
116 in solveLinearSystemImpl_
26 Solve: M deltax^k = r 
26 Newton::solveLinearSystem : entering the try section 13
26 in solveLinearSystemImpl_
69 Solve: M deltax^k = r 
69 Newton::solveLinearSystem : entering the try section 13
69 in solveLinearSystemImpl_
47 Solve: M deltax^k = r 
47 Newton::solveLinearSystem : entering the try section 13
47 in solveLinearSystemImpl_
95 Solve: M deltax^k = r 
95 Newton::solveLinearSystem : entering the try section 13
95 in solveLinearSystemImpl_
8 Solve: M deltax^k = r 
8 Newton::solveLinearSystem : entering the try section 13
8 in solveLinearSystemImpl_
29 Solve: M deltax^k = r 
29 Newton::solveLinearSystem : entering the try section 13
29 in solveLinearSystemImpl_
31 Solve: M deltax^k = r 
31 Newton::solveLinearSystem : entering the try section 13
31 in solveLinearSystemImpl_
96 Solve: M deltax^k = r 
96 Newton::solveLinearSystem : entering the try section 13
96 in solveLinearSystemImpl_
58 Solve: M deltax^k = r 
58 Newton::solveLinearSystem : entering the try section 13
58 in solveLinearSystemImpl_
17 Solve: M deltax^k = r 
17 Newton::solveLinearSystem : entering the try section 13
17 in solveLinearSystemImpl_
120 Solve: M deltax^k = r 
120 Newton::solveLinearSystem : entering the try section 13
120 in solveLinearSystemImpl_
40 Solve: M deltax^k = r 
40 Newton::solveLinearSystem : entering the try section 13
40 in solveLinearSystemImpl_
53 Solve: M deltax^k = r 
53 Newton::solveLinearSystem : entering the try section 13
53 in solveLinearSystemImpl_
88 Solve: M deltax^k = r 
88 Newton::solveLinearSystem : entering the try section 13
88 in solveLinearSystemImpl_
91 Solve: M deltax^k = r 
91 Newton::solveLinearSystem : entering the try section 13
91 in solveLinearSystemImpl_
62 Solve: M deltax^k = r 
62 Newton::solveLinearSystem : entering the try section 13
62 in solveLinearSystemImpl_
3 Solve: M deltax^k = r 
3 Newton::solveLinearSystem : entering the try section 13
3 in solveLinearSystemImpl_
14 Solve: M deltax^k = r 
14 Newton::solveLinearSystem : entering the try section 13
14 in solveLinearSystemImpl_
74 Solve: M deltax^k = r 
74 Newton::solveLinearSystem : entering the try section 13
74 in solveLinearSystemImpl_
67 Solve: M deltax^k = r 
67 Newton::solveLinearSystem : entering the try section 13
67 in solveLinearSystemImpl_
81 Solve: M deltax^k = r 
81 Newton::solveLinearSystem : entering the try section 13
81 in solveLinearSystemImpl_
6 Solve: M deltax^k = r 
6 Newton::solveLinearSystem : entering the try section 13
6 in solveLinearSystemImpl_
118 Solve: M deltax^k = r 
118 Newton::solveLinearSystem : entering the try section 13
118 in solveLinearSystemImpl_
65 Solve: M deltax^k = r 
65 Newton::solveLinearSystem : entering the try section 13
65 in solveLinearSystemImpl_
37 Solve: M deltax^k = r 
37 Newton::solveLinearSystem : entering the try section 13
37 in solveLinearSystemImpl_
92 Solve: M deltax^k = r 
92 Newton::solveLinearSystem : entering the try section 13
92 in solveLinearSystemImpl_
70 Solve: M deltax^k = r 
70 Newton::solveLinearSystem : entering the try section 13
70 in solveLinearSystemImpl_
66 Solve: M deltax^k = r 
66 Newton::solveLinearSystem : entering the try section 13
66 in solveLinearSystemImpl_
84 Solve: M deltax^k = r 
84 Newton::solveLinearSystem : entering the try section 13
84 in solveLinearSystemImpl_
64 Solve: M deltax^k = r 
64 Newton::solveLinearSystem : entering the try section 13
64 in solveLinearSystemImpl_
44 Solve: M deltax^k = r 
44 Newton::solveLinearSystem : entering the try section 13
44 in solveLinearSystemImpl_
110 Solve: M deltax^k = r 
110 Newton::solveLinearSystem : entering the try section 13
110 in solveLinearSystemImpl_
41 Solve: M deltax^k = r 
41 Newton::solveLinearSystem : entering the try section 13
41 in solveLinearSystemImpl_
52 Solve: M deltax^k = r 
52 Newton::solveLinearSystem : entering the try section 13
52 in solveLinearSystemImpl_
100 Solve: M deltax^k = r 
100 Newton::solveLinearSystem : entering the try section 13
100 in solveLinearSystemImpl_
77 Solve: M deltax^k = r 
77 Newton::solveLinearSystem : entering the try section 13
77 in solveLinearSystemImpl_
16 Solve: M deltax^k = r 
16 Newton::solveLinearSystem : entering the try section 13
16 in solveLinearSystemImpl_
49 Solve: M deltax^k = r 
49 Newton::solveLinearSystem : entering the try section 13
49 in solveLinearSystemImpl_
97 Solve: M deltax^k = r 
97 Newton::solveLinearSystem : entering the try section 13
97 in solveLinearSystemImpl_
35 Solve: M deltax^k = r 
35 Newton::solveLinearSystem : entering the try section 13
35 in solveLinearSystemImpl_
7 Solve: M deltax^k = r 
7 Newton::solveLinearSystem : entering the try section 13
7 in solveLinearSystemImpl_
83 Solve: M deltax^k = r 
83 Newton::solveLinearSystem : entering the try section 13
83 in solveLinearSystemImpl_
18 Solve: M deltax^k = r 
18 Newton::solveLinearSystem : entering the try section 13
18 in solveLinearSystemImpl_
27 Solve: M deltax^k = r 
27 Newton::solveLinearSystem : entering the try section 13
27 in solveLinearSystemImpl_
2 Solve: M deltax^k = r 
2 Newton::solveLinearSystem : entering the try section 13
2 in solveLinearSystemImpl_
57 Solve: M deltax^k = r 
57 Newton::solveLinearSystem : entering the try section 13
57 in solveLinearSystemImpl_
13 Solve: M deltax^k = r 
13 Newton::solveLinearSystem : entering the try section 13
13 in solveLinearSystemImpl_
86 Solve: M deltax^k = r 
86 Newton::solveLinearSystem : entering the try section 13
86 in solveLinearSystemImpl_
71 Solve: M deltax^k = r 
71 Newton::solveLinearSystem : entering the try section 13
71 in solveLinearSystemImpl_
12 Solve: M deltax^k = r 
12 Newton::solveLinearSystem : entering the try section 13
12 in solveLinearSystemImpl_
46 Solve: M deltax^k = r 
46 Newton::solveLinearSystem : entering the try section 13
46 in solveLinearSystemImpl_
94 Solve: M deltax^k = r 
94 Newton::solveLinearSystem : entering the try section 13
94 in solveLinearSystemImpl_
98 Solve: M deltax^k = r 
98 Newton::solveLinearSystem : entering the try section 13
98 in solveLinearSystemImpl_
56 Solve: M deltax^k = r 
56 Newton::solveLinearSystem : entering the try section 13
56 in solveLinearSystemImpl_
38 Solve: M deltax^k = r 
38 Newton::solveLinearSystem : entering the try section 13
38 in solveLinearSystemImpl_
60 Solve: M deltax^k = r 
60 Newton::solveLinearSystem : entering the try section 13
60 in solveLinearSystemImpl_
119 Solve: M deltax^k = r 
119 Newton::solveLinearSystem : entering the try section 13
119 in solveLinearSystemImpl_
45 Solve: M deltax^k = r 
45 Newton::solveLinearSystem : entering the try section 13
45 in solveLinearSystemImpl_
111 Solve: M deltax^k = r 
111 Newton::solveLinearSystem : entering the try section 13
111 in solveLinearSystemImpl_
115 Solve: M deltax^k = r 
115 Newton::solveLinearSystem : entering the try section 13
115 in solveLinearSystemImpl_
89 Solve: M deltax^k = r 
89 Newton::solveLinearSystem : entering the try section 13
89 in solveLinearSystemImpl_
108 Solve: M deltax^k = r 
108 Newton::solveLinearSystem : entering the try section 13
108 in solveLinearSystemImpl_
76 Solve: M deltax^k = r 
76 Newton::solveLinearSystem : entering the try section 13
76 in solveLinearSystemImpl_
54 Solve: M deltax^k = r 
54 Newton::solveLinearSystem : entering the try section 13
54 in solveLinearSystemImpl_
10 Solve: M deltax^k = r 
10 Newton::solveLinearSystem : entering the try section 13
10 in solveLinearSystemImpl_
117 Solve: M deltax^k = r 
117 Newton::solveLinearSystem : entering the try section 13
117 in solveLinearSystemImpl_
28 Solve: M deltax^k = r 
28 Newton::solveLinearSystem : entering the try section 13
28 in solveLinearSystemImpl_
23 Solve: M deltax^k = r 
23 Newton::solveLinearSystem : entering the try section 13
23 in solveLinearSystemImpl_
113 Solve: M deltax^k = r 
113 Newton::solveLinearSystem : entering the try section 13
113 in solveLinearSystemImpl_
114 Solve: M deltax^k = r 
114 Newton::solveLinearSystem : entering the try section 13
114 in solveLinearSystemImpl_
101 Solve: M deltax^k = r 
101 Newton::solveLinearSystem : entering the try section 13
101 in solveLinearSystemImpl_
19 Solve: M deltax^k = r 
19 Newton::solveLinearSystem : entering the try section 13
19 in solveLinearSystemImpl_
1 Solve: M deltax^k = r 
1 Newton::solveLinearSystem : entering the try section 13
1 in solveLinearSystemImpl_
93 Solve: M deltax^k = r 
93 Newton::solveLinearSystem : entering the try section 13
93 in solveLinearSystemImpl_
82 Solve: M deltax^k = r 
82 Newton::solveLinearSystem : entering the try section 13
82 in solveLinearSystemImpl_
63 Solve: M deltax^k = r 
63 Newton::solveLinearSystem : entering the try section 13
63 in solveLinearSystemImpl_
48 Solve: M deltax^k = r 
48 Newton::solveLinearSystem : entering the try section 13
48 in solveLinearSystemImpl_
20 Solve: M deltax^k = r 
20 Newton::solveLinearSystem : entering the try section 13
20 in solveLinearSystemImpl_
99 Solve: M deltax^k = r 
99 Newton::solveLinearSystem : entering the try section 13
99 in solveLinearSystemImpl_
24 Solve: M deltax^k = r 
24 Newton::solveLinearSystem : entering the try section 13
24 in solveLinearSystemImpl_
72 Solve: M deltax^k = r 
72 Newton::solveLinearSystem : entering the try section 13
72 in solveLinearSystemImpl_
103 Solve: M deltax^k = r 
103 Newton::solveLinearSystem : entering the try section 13
103 in solveLinearSystemImpl_
55 Solve: M deltax^k = r 
55 Newton::solveLinearSystem : entering the try section 13
55 in solveLinearSystemImpl_
46 converged value: 1 121 1 let s go get convergedRemote
46 to  comm_.min(converged) 
46 did  comm_.min(converged) convergedRemote: 1
46 final convergedRemote: 1
46 Update: x^(k+1) = x^k - deltax^k 
46 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
46 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
46 Newton iteration 14 done46 , maximum relative shift = 1.941e-09
46 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
94 converged value: 1 121 1 let s go get convergedRemote
94 to  comm_.min(converged) 
94 did  comm_.min(converged) convergedRemote: 1
94 final convergedRemote: 1
94 Update: x^(k+1) = x^k - deltax^k 
94 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
94 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
94 Newton iteration 14 done94 , maximum relative shift = 1.941e-09
94 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
98 converged value: 1 121 1 let s go get convergedRemote
98 to  comm_.min(converged) 
98 did  comm_.min(converged) convergedRemote: 1
98 final convergedRemote: 1
98 Update: x^(k+1) = x^k - deltax^k 
98 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
98 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
98 Newton iteration 14 done98 , maximum relative shift = 1.941e-09
98 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
56 converged value: 1 121 1 let s go get convergedRemote
56 to  comm_.min(converged) 
56 did  comm_.min(converged) convergedRemote: 1
56 final convergedRemote: 1
56 Update: x^(k+1) = x^k - deltax^k 
56 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
56 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
56 Newton iteration 14 done56 , maximum relative shift = 1.941e-09
56 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
38 converged value: 1 121 1 let s go get convergedRemote
38 to  comm_.min(converged) 
38 did  comm_.min(converged) convergedRemote: 1
38 final convergedRemote: 1
38 Update: x^(k+1) = x^k - deltax^k 
38 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
38 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
38 Newton iteration 14 done38 , maximum relative shift = 1.941e-09
38 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
60 converged value: 1 121 1 let s go get convergedRemote
60 to  comm_.min(converged) 
60 did  comm_.min(converged) convergedRemote: 1
60 final convergedRemote: 1
60 Update: x^(k+1) = x^k - deltax^k 
60 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
60 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
60 Newton iteration 14 done60 , maximum relative shift = 1.941e-09
60 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
119 converged value: 1 121 1 let s go get convergedRemote
119 to  comm_.min(converged) 
119 did  comm_.min(converged) convergedRemote: 1
119 final convergedRemote: 1
119 Update: x^(k+1) = x^k - deltax^k 
119 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
119 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
119 Newton iteration 14 done119 , maximum relative shift = 1.941e-09
119 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
45 converged value: 1 121 1 let s go get convergedRemote
45 to  comm_.min(converged) 
45 did  comm_.min(converged) convergedRemote: 1
45 final convergedRemote: 1
45 Update: x^(k+1) = x^k - deltax^k 
45 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
45 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
45 Newton iteration 14 done45 , maximum relative shift = 1.941e-09
45 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
111 converged value: 1 121 1 let s go get convergedRemote
111 to  comm_.min(converged) 
111 did  comm_.min(converged) convergedRemote: 1
111 final convergedRemote: 1
111 Update: x^(k+1) = x^k - deltax^k 
111 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
111 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
111 Newton iteration 14 done111 , maximum relative shift = 1.941e-09
111 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
115 converged value: 1 121 1 let s go get convergedRemote
115 to  comm_.min(converged) 
115 did  comm_.min(converged) convergedRemote: 1
115 final convergedRemote: 1
115 Update: x^(k+1) = x^k - deltax^k 
115 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
115 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
115 Newton iteration 14 done115 , maximum relative shift = 1.941e-09
115 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
89 converged value: 1 121 1 let s go get convergedRemote
89 to  comm_.min(converged) 
89 did  comm_.min(converged) convergedRemote: 1
89 final convergedRemote: 1
89 Update: x^(k+1) = x^k - deltax^k 
89 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
89 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
89 Newton iteration 14 done89 , maximum relative shift = 1.941e-09
89 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
108 converged value: 1 121 1 let s go get convergedRemote
108 to  comm_.min(converged) 
108 did  comm_.min(converged) convergedRemote: 1
108 final convergedRemote: 1
108 Update: x^(k+1) = x^k - deltax^k 
108 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
108 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
108 Newton iteration 14 done108 , maximum relative shift = 1.941e-09
108 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
76 converged value: 1 121 1 let s go get convergedRemote
76 to  comm_.min(converged) 
76 did  comm_.min(converged) convergedRemote: 1
76 final convergedRemote: 1
76 Update: x^(k+1) = x^k - deltax^k 
76 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
76 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
76 Newton iteration 14 done76 , maximum relative shift = 1.941e-09
76 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
54 converged value: 1 121 1 let s go get convergedRemote
54 to  comm_.min(converged) 
54 did  comm_.min(converged) convergedRemote: 1
54 final convergedRemote: 1
54 Update: x^(k+1) = x^k - deltax^k 
54 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
54 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
54 Newton iteration 14 done54 , maximum relative shift = 1.941e-09
54 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
55 converged value: 1 121 1 let s go get convergedRemote
55 to  comm_.min(converged) 
55 did  comm_.min(converged) convergedRemote: 1
55 final convergedRemote: 1
55 Update: x^(k+1) = x^k - deltax^k 
55 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
55 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
55 Newton iteration 14 done55 , maximum relative shift = 1.941e-09
55 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
28 converged value: 1 121 1 let s go get convergedRemote
28 to  comm_.min(converged) 
28 did  comm_.min(converged) convergedRemote: 1
28 final convergedRemote: 1
28 Update: x^(k+1) = x^k - deltax^k 
28 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
28 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
28 Newton iteration 14 done28 , maximum relative shift = 1.941e-09
28 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
23 converged value: 1 121 1 let s go get convergedRemote
23 to  comm_.min(converged) 
23 did  comm_.min(converged) convergedRemote: 1
23 final convergedRemote: 1
23 Update: x^(k+1) = x^k - deltax^k 
23 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
23 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
23 Newton iteration 14 done23 , maximum relative shift = 1.941e-09
23 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
113 converged value: 1 121 1 let s go get convergedRemote
113 to  comm_.min(converged) 
113 did  comm_.min(converged) convergedRemote: 1
113 final convergedRemote: 1
113 Update: x^(k+1) = x^k - deltax^k 
113 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
113 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
113 Newton iteration 14 done113 , maximum relative shift = 1.941e-09
113 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
114 converged value: 1 121 1 let s go get convergedRemote
114 to  comm_.min(converged) 
114 did  comm_.min(converged) convergedRemote: 1
114 final convergedRemote: 1
114 Update: x^(k+1) = x^k - deltax^k 
114 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
114 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
114 Newton iteration 14 done114 , maximum relative shift = 1.941e-09
114 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
101 converged value: 1 121 1 let s go get convergedRemote
101 to  comm_.min(converged) 
101 did  comm_.min(converged) convergedRemote: 1
101 final convergedRemote: 1
101 Update: x^(k+1) = x^k - deltax^k 
101 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
101 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
101 Newton iteration 14 done101 , maximum relative shift = 1.941e-09
101 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
19 converged value: 1 121 1 let s go get convergedRemote
19 to  comm_.min(converged) 
19 did  comm_.min(converged) convergedRemote: 1
19 final convergedRemote: 1
19 Update: x^(k+1) = x^k - deltax^k 
19 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
19 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
19 Newton iteration 14 done19 , maximum relative shift = 1.941e-09
19 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
1 converged value: 1 121 1 let s go get convergedRemote
1 to  comm_.min(converged) 
1 did  comm_.min(converged) convergedRemote: 1
1 final convergedRemote: 1
1 Update: x^(k+1) = x^k - deltax^k 
1 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
1 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
1 Newton iteration 14 done1 , maximum relative shift = 1.941e-09
1 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
93 converged value: 1 121 1 let s go get convergedRemote
93 to  comm_.min(converged) 
93 did  comm_.min(converged) convergedRemote: 1
93 final convergedRemote: 1
93 Update: x^(k+1) = x^k - deltax^k 
93 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
93 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
93 Newton iteration 14 done93 , maximum relative shift = 1.941e-09
93 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
82 converged value: 1 121 1 let s go get convergedRemote
82 to  comm_.min(converged) 
82 did  comm_.min(converged) convergedRemote: 1
82 final convergedRemote: 1
82 Update: x^(k+1) = x^k - deltax^k 
82 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
82 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
82 Newton iteration 14 done82 , maximum relative shift = 1.941e-09
82 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
63 converged value: 1 121 1 let s go get convergedRemote
63 to  comm_.min(converged) 
63 did  comm_.min(converged) convergedRemote: 1
63 final convergedRemote: 1
63 Update: x^(k+1) = x^k - deltax^k 
63 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
63 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
63 Newton iteration 14 done63 , maximum relative shift = 1.941e-09
63 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
48 converged value: 1 121 1 let s go get convergedRemote
48 to  comm_.min(converged) 
48 did  comm_.min(converged) convergedRemote: 1
48 final convergedRemote: 1
48 Update: x^(k+1) = x^k - deltax^k 
48 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
48 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
48 Newton iteration 14 done48 , maximum relative shift = 1.941e-09
48 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
20 converged value: 1 121 1 let s go get convergedRemote
20 to  comm_.min(converged) 
20 did  comm_.min(converged) convergedRemote: 1
20 final convergedRemote: 1
20 Update: x^(k+1) = x^k - deltax^k 
20 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
20 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
20 Newton iteration 14 done20 , maximum relative shift = 1.941e-09
20 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
99 converged value: 1 121 1 let s go get convergedRemote
99 to  comm_.min(converged) 
99 did  comm_.min(converged) convergedRemote: 1
99 final convergedRemote: 1
99 Update: x^(k+1) = x^k - deltax^k 
99 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
99 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
99 Newton iteration 14 done99 , maximum relative shift = 1.941e-09
99 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
24 converged value: 1 121 1 let s go get convergedRemote
24 to  comm_.min(converged) 
24 did  comm_.min(converged) convergedRemote: 1
24 final convergedRemote: 1
24 Update: x^(k+1) = x^k - deltax^k 
24 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
24 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
24 Newton iteration 14 done24 , maximum relative shift = 1.941e-09
24 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
72 converged value: 1 121 1 let s go get convergedRemote
72 to  comm_.min(converged) 
72 did  comm_.min(converged) convergedRemote: 1
72 final convergedRemote: 1
72 Update: x^(k+1) = x^k - deltax^k 
72 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
72 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
72 Newton iteration 14 done72 , maximum relative shift = 1.941e-09
72 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
103 converged value: 1 121 1 let s go get convergedRemote
103 to  comm_.min(converged) 
103 did  comm_.min(converged) convergedRemote: 1
103 final convergedRemote: 1
103 Update: x^(k+1) = x^k - deltax^k 
103 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
103 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
103 Newton iteration 14 done103 , maximum relative shift = 1.941e-09
103 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
10 converged value: 1 121 1 let s go get convergedRemote
10 to  comm_.min(converged) 
10 did  comm_.min(converged) convergedRemote: 1
10 final convergedRemote: 1
10 Update: x^(k+1) = x^k - deltax^k 
10 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
10 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
10 Newton iteration 14 done10 , maximum relative shift = 1.941e-09
10 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
90 converged value: 1 121 1 let s go get convergedRemote
90 to  comm_.min(converged) 
90 did  comm_.min(converged) convergedRemote: 1
90 final convergedRemote: 1
90 Update: x^(k+1) = x^k - deltax^k 
90 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
90 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
90 Newton iteration 14 done90 , maximum relative shift = 1.941e-09
90 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
104 converged value: 1 121 1 let s go get convergedRemote
104 to  comm_.min(converged) 
104 did  comm_.min(converged) convergedRemote: 1
104 final convergedRemote: 1
104 Update: x^(k+1) = x^k - deltax^k 
104 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
104 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
104 Newton iteration 14 done104 , maximum relative shift = 1.941e-09
104 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
39 converged value: 1 121 1 let s go get convergedRemote
39 to  comm_.min(converged) 
39 did  comm_.min(converged) convergedRemote: 1
39 final convergedRemote: 1
39 Update: x^(k+1) = x^k - deltax^k 
39 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
39 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
39 Newton iteration 14 done39 , maximum relative shift = 1.941e-09
39 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
85 converged value: 1 121 1 let s go get convergedRemote
85 to  comm_.min(converged) 
85 did  comm_.min(converged) convergedRemote: 1
85 final convergedRemote: 1
85 Update: x^(k+1) = x^k - deltax^k 
85 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
85 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
85 Newton iteration 14 done85 , maximum relative shift = 1.941e-09
85 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
25 converged value: 1 121 1 let s go get convergedRemote
25 to  comm_.min(converged) 
25 did  comm_.min(converged) convergedRemote: 1
25 final convergedRemote: 1
25 Update: x^(k+1) = x^k - deltax^k 
25 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
25 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
25 Newton iteration 14 done25 , maximum relative shift = 1.941e-09
25 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
36 converged value: 1 121 1 let s go get convergedRemote
36 to  comm_.min(converged) 
36 did  comm_.min(converged) convergedRemote: 1
36 final convergedRemote: 1
36 Update: x^(k+1) = x^k - deltax^k 
36 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
36 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
36 Newton iteration 14 done36 , maximum relative shift = 1.941e-09
36 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
0 converged value: 1 121 1 let s go get convergedRemote
0 to  comm_.min(converged) 
0 did  comm_.min(converged) convergedRemote: 1
0 final convergedRemote: 1
0 Update: x^(k+1) = x^k - deltax^k 
0 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
0 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
0 Newton iteration 14 done0 , maximum relative shift = 1.941e-09
0 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
75 converged value: 1 121 1 let s go get convergedRemote
75 to  comm_.min(converged) 
75 did  comm_.min(converged) convergedRemote: 1
75 final convergedRemote: 1
75 Update: x^(k+1) = x^k - deltax^k 
75 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
75 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
75 Newton iteration 14 done75 , maximum relative shift = 1.941e-09
75 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
68 converged value: 1 121 1 let s go get convergedRemote
68 to  comm_.min(converged) 
68 did  comm_.min(converged) convergedRemote: 1
68 final convergedRemote: 1
68 Update: x^(k+1) = x^k - deltax^k 
68 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
68 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
68 Newton iteration 14 done68 , maximum relative shift = 1.941e-09
68 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
73 converged value: 1 121 1 let s go get convergedRemote
73 to  comm_.min(converged) 
73 did  comm_.min(converged) convergedRemote: 1
73 final convergedRemote: 1
73 Update: x^(k+1) = x^k - deltax^k 
73 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
73 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
73 Newton iteration 14 done73 , maximum relative shift = 1.941e-09
73 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
11 converged value: 1 121 1 let s go get convergedRemote
11 to  comm_.min(converged) 
11 did  comm_.min(converged) convergedRemote: 1
11 final convergedRemote: 1
11 Update: x^(k+1) = x^k - deltax^k 
11 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
11 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
11 Newton iteration 14 done11 , maximum relative shift = 1.941e-09
11 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
112 converged value: 1 121 1 let s go get convergedRemote
112 to  comm_.min(converged) 
112 did  comm_.min(converged) convergedRemote: 1
112 final convergedRemote: 1
112 Update: x^(k+1) = x^k - deltax^k 
112 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
112 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
112 Newton iteration 14 done112 , maximum relative shift = 1.941e-09
112 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
102 converged value: 1 121 1 let s go get convergedRemote
102 to  comm_.min(converged) 
102 did  comm_.min(converged) convergedRemote: 1
102 final convergedRemote: 1
102 Update: x^(k+1) = x^k - deltax^k 
102 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
102 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
102 Newton iteration 14 done102 , maximum relative shift = 1.941e-09
102 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
105 converged value: 1 121 1 let s go get convergedRemote
105 to  comm_.min(converged) 
105 did  comm_.min(converged) convergedRemote: 1
105 final convergedRemote: 1
105 Update: x^(k+1) = x^k - deltax^k 
105 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
105 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
105 Newton iteration 14 done105 , maximum relative shift = 1.941e-09
105 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
59 converged value: 1 121 1 let s go get convergedRemote
59 to  comm_.min(converged) 
59 did  comm_.min(converged) convergedRemote: 1
59 final convergedRemote: 1
59 Update: x^(k+1) = x^k - deltax^k 
59 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
59 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
59 Newton iteration 14 done59 , maximum relative shift = 1.941e-09
59 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
42 converged value: 1 121 1 let s go get convergedRemote
42 to  comm_.min(converged) 
42 did  comm_.min(converged) convergedRemote: 1
42 final convergedRemote: 1
42 Update: x^(k+1) = x^k - deltax^k 
42 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
42 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
42 Newton iteration 14 done42 , maximum relative shift = 1.941e-09
42 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
4 converged value: 1 121 1 let s go get convergedRemote
4 to  comm_.min(converged) 
4 did  comm_.min(converged) convergedRemote: 1
4 final convergedRemote: 1
4 Update: x^(k+1) = x^k - deltax^k 
4 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
4 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
4 Newton iteration 14 done4 , maximum relative shift = 1.941e-09
4 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
79 converged value: 1 121 1 let s go get convergedRemote
79 to  comm_.min(converged) 
79 did  comm_.min(converged) convergedRemote: 1
79 final convergedRemote: 1
79 Update: x^(k+1) = x^k - deltax^k 
79 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
79 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
79 Newton iteration 14 done79 , maximum relative shift = 1.941e-09
79 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
5 converged value: 1 121 1 let s go get convergedRemote
5 to  comm_.min(converged) 
5 did  comm_.min(converged) convergedRemote: 1
5 final convergedRemote: 1
5 Update: x^(k+1) = x^k - deltax^k 
5 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
5 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
5 Newton iteration 14 done5 , maximum relative shift = 1.941e-09
5 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
80 converged value: 1 121 1 let s go get convergedRemote
80 to  comm_.min(converged) 
80 did  comm_.min(converged) convergedRemote: 1
80 final convergedRemote: 1
80 Update: x^(k+1) = x^k - deltax^k 
80 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
80 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
80 Newton iteration 14 done80 , maximum relative shift = 1.941e-09
80 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
87 converged value: 1 121 1 let s go get convergedRemote
87 to  comm_.min(converged) 
87 did  comm_.min(converged) convergedRemote: 1
87 final convergedRemote: 1
87 Update: x^(k+1) = x^k - deltax^k 
87 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
87 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
87 Newton iteration 14 done87 , maximum relative shift = 1.941e-09
87 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
50 converged value: 1 121 1 let s go get convergedRemote
50 to  comm_.min(converged) 
50 did  comm_.min(converged) convergedRemote: 1
50 final convergedRemote: 1
50 Update: x^(k+1) = x^k - deltax^k 
50 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
50 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
50 Newton iteration 14 done50 , maximum relative shift = 1.941e-09
50 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
32 converged value: 1 121 1 let s go get convergedRemote
32 to  comm_.min(converged) 
32 did  comm_.min(converged) convergedRemote: 1
32 final convergedRemote: 1
32 Update: x^(k+1) = x^k - deltax^k 
32 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
32 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
32 Newton iteration 14 done32 , maximum relative shift = 1.941e-09
32 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
109 converged value: 1 121 1 let s go get convergedRemote
109 to  comm_.min(converged) 
109 did  comm_.min(converged) convergedRemote: 1
109 final convergedRemote: 1
109 Update: x^(k+1) = x^k - deltax^k 
109 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
109 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
109 Newton iteration 14 done109 , maximum relative shift = 1.941e-09
109 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
34 converged value: 1 121 1 let s go get convergedRemote
34 to  comm_.min(converged) 
34 did  comm_.min(converged) convergedRemote: 1
34 final convergedRemote: 1
34 Update: x^(k+1) = x^k - deltax^k 
34 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
34 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
34 Newton iteration 14 done34 , maximum relative shift = 1.941e-09
34 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
107 converged value: 1 121 1 let s go get convergedRemote
107 to  comm_.min(converged) 
107 did  comm_.min(converged) convergedRemote: 1
107 final convergedRemote: 1
107 Update: x^(k+1) = x^k - deltax^k 
107 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
107 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
107 Newton iteration 14 done107 , maximum relative shift = 1.941e-09
107 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
106 converged value: 1 121 1 let s go get convergedRemote
106 to  comm_.min(converged) 
106 did  comm_.min(converged) convergedRemote: 1
106 final convergedRemote: 1
106 Update: x^(k+1) = x^k - deltax^k 
106 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
106 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
106 Newton iteration 14 done106 , maximum relative shift = 1.941e-09
106 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
9 converged value: 1 121 1 let s go get convergedRemote
9 to  comm_.min(converged) 
9 did  comm_.min(converged) convergedRemote: 1
9 final convergedRemote: 1
9 Update: x^(k+1) = x^k - deltax^k 
9 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
9 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
9 Newton iteration 14 done9 , maximum relative shift = 1.941e-09
9 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
30 converged value: 1 121 1 let s go get convergedRemote
30 to  comm_.min(converged) 
30 did  comm_.min(converged) convergedRemote: 1
30 final convergedRemote: 1
30 Update: x^(k+1) = x^k - deltax^k 
30 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
30 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
30 Newton iteration 14 done30 , maximum relative shift = 1.941e-09
30 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
51 converged value: 1 121 1 let s go get convergedRemote
51 to  comm_.min(converged) 
51 did  comm_.min(converged) convergedRemote: 1
51 final convergedRemote: 1
51 Update: x^(k+1) = x^k - deltax^k 
51 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
51 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
51 Newton iteration 14 done51 , maximum relative shift = 1.941e-09
51 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
21 converged value: 1 121 1 let s go get convergedRemote
21 to  comm_.min(converged) 
21 did  comm_.min(converged) convergedRemote: 1
21 final convergedRemote: 1
21 Update: x^(k+1) = x^k - deltax^k 
21 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
21 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
21 Newton iteration 14 done21 , maximum relative shift = 1.941e-09
21 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
15 converged value: 1 121 1 let s go get convergedRemote
15 to  comm_.min(converged) 
15 did  comm_.min(converged) convergedRemote: 1
15 final convergedRemote: 1
15 Update: x^(k+1) = x^k - deltax^k 
15 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
15 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
15 Newton iteration 14 done15 , maximum relative shift = 1.941e-09
15 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
33 converged value: 1 121 1 let s go get convergedRemote
33 to  comm_.min(converged) 
33 did  comm_.min(converged) convergedRemote: 1
33 final convergedRemote: 1
33 Update: x^(k+1) = x^k - deltax^k 
33 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
33 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
33 Newton iteration 14 done33 , maximum relative shift = 1.941e-09
33 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
61 converged value: 1 121 1 let s go get convergedRemote
61 to  comm_.min(converged) 
61 did  comm_.min(converged) convergedRemote: 1
61 final convergedRemote: 1
61 Update: x^(k+1) = x^k - deltax^k 
61 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
61 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
61 Newton iteration 14 done61 , maximum relative shift = 1.941e-09
61 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
78 converged value: 1 121 1 let s go get convergedRemote
78 to  comm_.min(converged) 
78 did  comm_.min(converged) convergedRemote: 1
78 final convergedRemote: 1
78 Update: x^(k+1) = x^k - deltax^k 
78 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
78 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
78 Newton iteration 14 done78 , maximum relative shift = 1.941e-09
78 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
22 converged value: 1 121 1 let s go get convergedRemote
22 to  comm_.min(converged) 
22 did  comm_.min(converged) convergedRemote: 1
22 final convergedRemote: 1
22 Update: x^(k+1) = x^k - deltax^k 
22 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
22 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
22 Newton iteration 14 done22 , maximum relative shift = 1.941e-09
22 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
43 converged value: 1 121 1 let s go get convergedRemote
43 to  comm_.min(converged) 
43 did  comm_.min(converged) convergedRemote: 1
43 final convergedRemote: 1
43 Update: x^(k+1) = x^k - deltax^k 
43 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
43 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
43 Newton iteration 14 done43 , maximum relative shift = 1.941e-09
43 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
116 converged value: 1 121 1 let s go get convergedRemote
116 to  comm_.min(converged) 
116 did  comm_.min(converged) convergedRemote: 1
116 final convergedRemote: 1
116 Update: x^(k+1) = x^k - deltax^k 
116 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
116 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
116 Newton iteration 14 done116 , maximum relative shift = 1.941e-09
116 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
26 converged value: 1 121 1 let s go get convergedRemote
26 to  comm_.min(converged) 
26 did  comm_.min(converged) convergedRemote: 1
26 final convergedRemote: 1
26 Update: x^(k+1) = x^k - deltax^k 
26 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
26 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
26 Newton iteration 14 done26 , maximum relative shift = 1.941e-09
26 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
69 converged value: 1 121 1 let s go get convergedRemote
69 to  comm_.min(converged) 
69 did  comm_.min(converged) convergedRemote: 1
69 final convergedRemote: 1
69 Update: x^(k+1) = x^k - deltax^k 
69 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
69 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
69 Newton iteration 14 done69 , maximum relative shift = 1.941e-09
69 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
47 converged value: 1 121 1 let s go get convergedRemote
47 to  comm_.min(converged) 
47 did  comm_.min(converged) convergedRemote: 1
47 final convergedRemote: 1
47 Update: x^(k+1) = x^k - deltax^k 
47 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
47 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
47 Newton iteration 14 done47 , maximum relative shift = 1.941e-09
47 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
95 converged value: 1 121 1 let s go get convergedRemote
95 to  comm_.min(converged) 
95 did  comm_.min(converged) convergedRemote: 1
95 final convergedRemote: 1
95 Update: x^(k+1) = x^k - deltax^k 
95 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
95 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
95 Newton iteration 14 done95 , maximum relative shift = 1.941e-09
95 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
8 converged value: 1 121 1 let s go get convergedRemote
8 to  comm_.min(converged) 
8 did  comm_.min(converged) convergedRemote: 1
8 final convergedRemote: 1
8 Update: x^(k+1) = x^k - deltax^k 
8 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
8 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
8 Newton iteration 14 done8 , maximum relative shift = 1.941e-09
8 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
29 converged value: 1 121 1 let s go get convergedRemote
29 to  comm_.min(converged) 
29 did  comm_.min(converged) convergedRemote: 1
29 final convergedRemote: 1
29 Update: x^(k+1) = x^k - deltax^k 
29 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
29 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
29 Newton iteration 14 done29 , maximum relative shift = 1.941e-09
29 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
31 converged value: 1 121 1 let s go get convergedRemote
31 to  comm_.min(converged) 
31 did  comm_.min(converged) convergedRemote: 1
31 final convergedRemote: 1
31 Update: x^(k+1) = x^k - deltax^k 
31 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
31 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
31 Newton iteration 14 done31 , maximum relative shift = 1.941e-09
31 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
96 converged value: 1 121 1 let s go get convergedRemote
96 to  comm_.min(converged) 
96 did  comm_.min(converged) convergedRemote: 1
96 final convergedRemote: 1
96 Update: x^(k+1) = x^k - deltax^k 
96 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
96 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
96 Newton iteration 14 done96 , maximum relative shift = 1.941e-09
96 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
58 converged value: 1 121 1 let s go get convergedRemote
58 to  comm_.min(converged) 
58 did  comm_.min(converged) convergedRemote: 1
58 final convergedRemote: 1
58 Update: x^(k+1) = x^k - deltax^k 
58 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
58 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
58 Newton iteration 14 done58 , maximum relative shift = 1.941e-09
58 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
17 converged value: 1 121 1 let s go get convergedRemote
17 to  comm_.min(converged) 
17 did  comm_.min(converged) convergedRemote: 1
17 final convergedRemote: 1
17 Update: x^(k+1) = x^k - deltax^k 
17 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
17 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
17 Newton iteration 14 done17 , maximum relative shift = 1.941e-09
17 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
120 converged value: 1 121 1 let s go get convergedRemote
120 to  comm_.min(converged) 
120 did  comm_.min(converged) convergedRemote: 1
120 final convergedRemote: 1
120 Update: x^(k+1) = x^k - deltax^k 
120 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
120 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
120 Newton iteration 14 done120 , maximum relative shift = 1.941e-09
120 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
40 converged value: 1 121 1 let s go get convergedRemote
40 to  comm_.min(converged) 
40 did  comm_.min(converged) convergedRemote: 1
40 final convergedRemote: 1
40 Update: x^(k+1) = x^k - deltax^k 
40 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
40 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
40 Newton iteration 14 done40 , maximum relative shift = 1.941e-09
40 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
53 converged value: 1 121 1 let s go get convergedRemote
53 to  comm_.min(converged) 
53 did  comm_.min(converged) convergedRemote: 1
53 final convergedRemote: 1
53 Update: x^(k+1) = x^k - deltax^k 
53 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
53 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
53 Newton iteration 14 done53 , maximum relative shift = 1.941e-09
53 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
88 converged value: 1 121 1 let s go get convergedRemote
88 to  comm_.min(converged) 
88 did  comm_.min(converged) convergedRemote: 1
88 final convergedRemote: 1
88 Update: x^(k+1) = x^k - deltax^k 
88 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
88 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
88 Newton iteration 14 done88 , maximum relative shift = 1.941e-09
88 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
91 converged value: 1 121 1 let s go get convergedRemote
91 to  comm_.min(converged) 
91 did  comm_.min(converged) convergedRemote: 1
91 final convergedRemote: 1
91 Update: x^(k+1) = x^k - deltax^k 
91 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
91 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
91 Newton iteration 14 done91 , maximum relative shift = 1.941e-09
91 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
62 converged value: 1 121 1 let s go get convergedRemote
62 to  comm_.min(converged) 
62 did  comm_.min(converged) convergedRemote: 1
62 final convergedRemote: 1
62 Update: x^(k+1) = x^k - deltax^k 
62 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
62 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
62 Newton iteration 14 done62 , maximum relative shift = 1.941e-09
62 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
3 converged value: 1 121 1 let s go get convergedRemote
3 to  comm_.min(converged) 
3 did  comm_.min(converged) convergedRemote: 1
3 final convergedRemote: 1
3 Update: x^(k+1) = x^k - deltax^k 
3 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
3 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
3 Newton iteration 14 done3 , maximum relative shift = 1.941e-09
3 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
14 converged value: 1 121 1 let s go get convergedRemote
14 to  comm_.min(converged) 
14 did  comm_.min(converged) convergedRemote: 1
14 final convergedRemote: 1
14 Update: x^(k+1) = x^k - deltax^k 
14 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
14 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
14 Newton iteration 14 done14 , maximum relative shift = 1.941e-09
14 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
74 converged value: 1 121 1 let s go get convergedRemote
74 to  comm_.min(converged) 
74 did  comm_.min(converged) convergedRemote: 1
74 final convergedRemote: 1
74 Update: x^(k+1) = x^k - deltax^k 
74 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
74 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
74 Newton iteration 14 done74 , maximum relative shift = 1.941e-09
74 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
67 converged value: 1 121 1 let s go get convergedRemote
67 to  comm_.min(converged) 
67 did  comm_.min(converged) convergedRemote: 1
67 final convergedRemote: 1
67 Update: x^(k+1) = x^k - deltax^k 
67 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
67 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
67 Newton iteration 14 done67 , maximum relative shift = 1.941e-09
67 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
81 converged value: 1 121 1 let s go get convergedRemote
81 to  comm_.min(converged) 
81 did  comm_.min(converged) convergedRemote: 1
81 final convergedRemote: 1
81 Update: x^(k+1) = x^k - deltax^k 
81 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
81 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
81 Newton iteration 14 done81 , maximum relative shift = 1.941e-09
81 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
6 converged value: 1 121 1 let s go get convergedRemote
6 to  comm_.min(converged) 
6 did  comm_.min(converged) convergedRemote: 1
6 final convergedRemote: 1
6 Update: x^(k+1) = x^k - deltax^k 
6 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
6 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
6 Newton iteration 14 done6 , maximum relative shift = 1.941e-09
6 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
118 converged value: 1 121 1 let s go get convergedRemote
118 to  comm_.min(converged) 
118 did  comm_.min(converged) convergedRemote: 1
118 final convergedRemote: 1
118 Update: x^(k+1) = x^k - deltax^k 
118 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
118 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
118 Newton iteration 14 done118 , maximum relative shift = 1.941e-09
118 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
65 converged value: 1 121 1 let s go get convergedRemote
65 to  comm_.min(converged) 
65 did  comm_.min(converged) convergedRemote: 1
65 final convergedRemote: 1
65 Update: x^(k+1) = x^k - deltax^k 
65 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
65 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
65 Newton iteration 14 done65 , maximum relative shift = 1.941e-09
65 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
37 converged value: 1 121 1 let s go get convergedRemote
37 to  comm_.min(converged) 
37 did  comm_.min(converged) convergedRemote: 1
37 final convergedRemote: 1
37 Update: x^(k+1) = x^k - deltax^k 
37 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
37 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
37 Newton iteration 14 done37 , maximum relative shift = 1.941e-09
37 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
92 converged value: 1 121 1 let s go get convergedRemote
92 to  comm_.min(converged) 
92 did  comm_.min(converged) convergedRemote: 1
92 final convergedRemote: 1
92 Update: x^(k+1) = x^k - deltax^k 
92 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
92 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
92 Newton iteration 14 done92 , maximum relative shift = 1.941e-09
92 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
70 converged value: 1 121 1 let s go get convergedRemote
70 to  comm_.min(converged) 
70 did  comm_.min(converged) convergedRemote: 1
70 final convergedRemote: 1
70 Update: x^(k+1) = x^k - deltax^k 
70 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
70 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
70 Newton iteration 14 done70 , maximum relative shift = 1.941e-09
70 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
66 converged value: 1 121 1 let s go get convergedRemote
66 to  comm_.min(converged) 
66 did  comm_.min(converged) convergedRemote: 1
66 final convergedRemote: 1
66 Update: x^(k+1) = x^k - deltax^k 
66 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
66 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
66 Newton iteration 14 done66 , maximum relative shift = 1.941e-09
66 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
84 converged value: 1 121 1 let s go get convergedRemote
84 to  comm_.min(converged) 
84 did  comm_.min(converged) convergedRemote: 1
84 final convergedRemote: 1
84 Update: x^(k+1) = x^k - deltax^k 
84 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
84 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
84 Newton iteration 14 done84 , maximum relative shift = 1.941e-09
84 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
64 converged value: 1 121 1 let s go get convergedRemote
64 to  comm_.min(converged) 
64 did  comm_.min(converged) convergedRemote: 1
64 final convergedRemote: 1
64 Update: x^(k+1) = x^k - deltax^k 
64 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
64 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
64 Newton iteration 14 done64 , maximum relative shift = 1.941e-09
64 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
44 converged value: 1 121 1 let s go get convergedRemote
44 to  comm_.min(converged) 
44 did  comm_.min(converged) convergedRemote: 1
44 final convergedRemote: 1
44 Update: x^(k+1) = x^k - deltax^k 
44 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
44 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
44 Newton iteration 14 done44 , maximum relative shift = 1.941e-09
44 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
110 converged value: 1 121 1 let s go get convergedRemote
110 to  comm_.min(converged) 
110 did  comm_.min(converged) convergedRemote: 1
110 final convergedRemote: 1
110 Update: x^(k+1) = x^k - deltax^k 
110 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
110 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
110 Newton iteration 14 done110 , maximum relative shift = 1.941e-09
110 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
41 converged value: 1 121 1 let s go get convergedRemote
41 to  comm_.min(converged) 
41 did  comm_.min(converged) convergedRemote: 1
41 final convergedRemote: 1
41 Update: x^(k+1) = x^k - deltax^k 
41 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
41 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
41 Newton iteration 14 done41 , maximum relative shift = 1.941e-09
41 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
52 converged value: 1 121 1 let s go get convergedRemote
52 to  comm_.min(converged) 
52 did  comm_.min(converged) convergedRemote: 1
52 final convergedRemote: 1
52 Update: x^(k+1) = x^k - deltax^k 
52 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
52 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
52 Newton iteration 14 done52 , maximum relative shift = 1.941e-09
52 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
100 converged value: 1 121 1 let s go get convergedRemote
100 to  comm_.min(converged) 
100 did  comm_.min(converged) convergedRemote: 1
100 final convergedRemote: 1
100 Update: x^(k+1) = x^k - deltax^k 
100 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
100 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
100 Newton iteration 14 done100 , maximum relative shift = 1.941e-09
100 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
77 converged value: 1 121 1 let s go get convergedRemote
77 to  comm_.min(converged) 
77 did  comm_.min(converged) convergedRemote: 1
77 final convergedRemote: 1
77 Update: x^(k+1) = x^k - deltax^k 
77 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
77 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
77 Newton iteration 14 done77 , maximum relative shift = 1.941e-09
77 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
16 converged value: 1 121 1 let s go get convergedRemote
16 to  comm_.min(converged) 
16 did  comm_.min(converged) convergedRemote: 1
16 final convergedRemote: 1
16 Update: x^(k+1) = x^k - deltax^k 
16 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
16 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
16 Newton iteration 14 done16 , maximum relative shift = 1.941e-09
16 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
49 converged value: 1 121 1 let s go get convergedRemote
49 to  comm_.min(converged) 
49 did  comm_.min(converged) convergedRemote: 1
49 final convergedRemote: 1
49 Update: x^(k+1) = x^k - deltax^k 
49 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
49 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
49 Newton iteration 14 done49 , maximum relative shift = 1.941e-09
49 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
97 converged value: 1 121 1 let s go get convergedRemote
97 to  comm_.min(converged) 
97 did  comm_.min(converged) convergedRemote: 1
97 final convergedRemote: 1
97 Update: x^(k+1) = x^k - deltax^k 
97 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
97 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
97 Newton iteration 14 done97 , maximum relative shift = 1.941e-09
97 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
35 converged value: 1 121 1 let s go get convergedRemote
35 to  comm_.min(converged) 
35 did  comm_.min(converged) convergedRemote: 1
35 final convergedRemote: 1
35 Update: x^(k+1) = x^k - deltax^k 
35 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
35 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
35 Newton iteration 14 done35 , maximum relative shift = 1.941e-09
35 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
7 converged value: 1 121 1 let s go get convergedRemote
7 to  comm_.min(converged) 
7 did  comm_.min(converged) convergedRemote: 1
7 final convergedRemote: 1
7 Update: x^(k+1) = x^k - deltax^k 
7 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
7 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
7 Newton iteration 14 done7 , maximum relative shift = 1.941e-09
7 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
83 converged value: 1 121 1 let s go get convergedRemote
83 to  comm_.min(converged) 
83 did  comm_.min(converged) convergedRemote: 1
83 final convergedRemote: 1
83 Update: x^(k+1) = x^k - deltax^k 
83 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
83 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
83 Newton iteration 14 done83 , maximum relative shift = 1.941e-09
83 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
18 converged value: 1 121 1 let s go get convergedRemote
18 to  comm_.min(converged) 
18 did  comm_.min(converged) convergedRemote: 1
18 final convergedRemote: 1
18 Update: x^(k+1) = x^k - deltax^k 
18 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
18 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
18 Newton iteration 14 done18 , maximum relative shift = 1.941e-09
18 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
27 converged value: 1 121 1 let s go get convergedRemote
27 to  comm_.min(converged) 
27 did  comm_.min(converged) convergedRemote: 1
27 final convergedRemote: 1
27 Update: x^(k+1) = x^k - deltax^k 
27 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
27 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
27 Newton iteration 14 done27 , maximum relative shift = 1.941e-09
27 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
2 converged value: 1 121 1 let s go get convergedRemote
2 to  comm_.min(converged) 
2 did  comm_.min(converged) convergedRemote: 1
2 final convergedRemote: 1
2 Update: x^(k+1) = x^k - deltax^k 
2 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
2 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
2 Newton iteration 14 done2 , maximum relative shift = 1.941e-09
2 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
57 converged value: 1 121 1 let s go get convergedRemote
57 to  comm_.min(converged) 
57 did  comm_.min(converged) convergedRemote: 1
57 final convergedRemote: 1
57 Update: x^(k+1) = x^k - deltax^k 
57 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
57 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
57 Newton iteration 14 done57 , maximum relative shift = 1.941e-09
57 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
13 converged value: 1 121 1 let s go get convergedRemote
13 to  comm_.min(converged) 
13 did  comm_.min(converged) convergedRemote: 1
13 final convergedRemote: 1
13 Update: x^(k+1) = x^k - deltax^k 
13 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
13 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
13 Newton iteration 14 done13 , maximum relative shift = 1.941e-09
13 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
86 converged value: 1 121 1 let s go get convergedRemote
86 to  comm_.min(converged) 
86 did  comm_.min(converged) convergedRemote: 1
86 final convergedRemote: 1
86 Update: x^(k+1) = x^k - deltax^k 
86 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
86 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
86 Newton iteration 14 done86 , maximum relative shift = 1.941e-09
86 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
71 converged value: 1 121 1 let s go get convergedRemote
71 to  comm_.min(converged) 
71 did  comm_.min(converged) convergedRemote: 1
71 final convergedRemote: 1
71 Update: x^(k+1) = x^k - deltax^k 
71 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
71 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
71 Newton iteration 14 done71 , maximum relative shift = 1.941e-09
71 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
12 converged value: 1 121 1 let s go get convergedRemote
12 to  comm_.min(converged) 
12 did  comm_.min(converged) convergedRemote: 1
12 final convergedRemote: 1
12 Update: x^(k+1) = x^k - deltax^k 
12 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
12 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
12 Newton iteration 14 done12 , maximum relative shift = 1.941e-09
12 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
117 converged value: 1 121 1 let s go get convergedRemote
117 to  comm_.min(converged) 
117 did  comm_.min(converged) convergedRemote: 1
117 final convergedRemote: 1
117 Update: x^(k+1) = x^k - deltax^k 
117 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
117 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
117 Newton iteration 14 done117 , maximum relative shift = 1.941e-09
117 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
67 Solve: M deltax^k = r 
67 Newton::solveLinearSystem : entering the try section 14
67 in solveLinearSystemImpl_
81 Solve: M deltax^k = r 
81 Newton::solveLinearSystem : entering the try section 14
81 in solveLinearSystemImpl_
6 Solve: M deltax^k = r 
6 Newton::solveLinearSystem : entering the try section 14
6 in solveLinearSystemImpl_
118 Solve: M deltax^k = r 
118 Newton::solveLinearSystem : entering the try section 14
118 in solveLinearSystemImpl_
65 Solve: M deltax^k = r 
65 Newton::solveLinearSystem : entering the try section 14
65 in solveLinearSystemImpl_
37 Solve: M deltax^k = r 
37 Newton::solveLinearSystem : entering the try section 14
37 in solveLinearSystemImpl_
92 Solve: M deltax^k = r 
92 Newton::solveLinearSystem : entering the try section 14
92 in solveLinearSystemImpl_
70 Solve: M deltax^k = r 
70 Newton::solveLinearSystem : entering the try section 14
70 in solveLinearSystemImpl_
66 Solve: M deltax^k = r 
66 Newton::solveLinearSystem : entering the try section 14
66 in solveLinearSystemImpl_
84 Solve: M deltax^k = r 
84 Newton::solveLinearSystem : entering the try section 14
84 in solveLinearSystemImpl_
64 Solve: M deltax^k = r 
64 Newton::solveLinearSystem : entering the try section 14
64 in solveLinearSystemImpl_
44 Solve: M deltax^k = r 
44 Newton::solveLinearSystem : entering the try section 14
44 in solveLinearSystemImpl_
110 Solve: M deltax^k = r 
110 Newton::solveLinearSystem : entering the try section 14
110 in solveLinearSystemImpl_
41 Solve: M deltax^k = r 
41 Newton::solveLinearSystem : entering the try section 14
41 in solveLinearSystemImpl_
52 Solve: M deltax^k = r 
52 Newton::solveLinearSystem : entering the try section 14
52 in solveLinearSystemImpl_
100 Solve: M deltax^k = r 
100 Newton::solveLinearSystem : entering the try section 14
100 in solveLinearSystemImpl_
77 Solve: M deltax^k = r 
77 Newton::solveLinearSystem : entering the try section 14
77 in solveLinearSystemImpl_
16 Solve: M deltax^k = r 
16 Newton::solveLinearSystem : entering the try section 14
16 in solveLinearSystemImpl_
49 Solve: M deltax^k = r 
49 Newton::solveLinearSystem : entering the try section 14
49 in solveLinearSystemImpl_
97 Solve: M deltax^k = r 
97 Newton::solveLinearSystem : entering the try section 14
97 in solveLinearSystemImpl_
35 Solve: M deltax^k = r 
35 Newton::solveLinearSystem : entering the try section 14
35 in solveLinearSystemImpl_
7 Solve: M deltax^k = r 
7 Newton::solveLinearSystem : entering the try section 14
7 in solveLinearSystemImpl_
83 Solve: M deltax^k = r 
83 Newton::solveLinearSystem : entering the try section 14
83 in solveLinearSystemImpl_
18 Solve: M deltax^k = r 
18 Newton::solveLinearSystem : entering the try section 14
18 in solveLinearSystemImpl_
27 Solve: M deltax^k = r 
27 Newton::solveLinearSystem : entering the try section 14
27 in solveLinearSystemImpl_
2 Solve: M deltax^k = r 
2 Newton::solveLinearSystem : entering the try section 14
2 in solveLinearSystemImpl_
57 Solve: M deltax^k = r 
57 Newton::solveLinearSystem : entering the try section 14
57 in solveLinearSystemImpl_
13 Solve: M deltax^k = r 
13 Newton::solveLinearSystem : entering the try section 14
13 in solveLinearSystemImpl_
86 Solve: M deltax^k = r 
86 Newton::solveLinearSystem : entering the try section 14
86 in solveLinearSystemImpl_
71 Solve: M deltax^k = r 
71 Newton::solveLinearSystem : entering the try section 14
71 in solveLinearSystemImpl_
54 Solve: M deltax^k = r 
54 Newton::solveLinearSystem : entering the try section 14
54 in solveLinearSystemImpl_
46 Solve: M deltax^k = r 
46 Newton::solveLinearSystem : entering the try section 14
46 in solveLinearSystemImpl_
94 Solve: M deltax^k = r 
94 Newton::solveLinearSystem : entering the try section 14
94 in solveLinearSystemImpl_
98 Solve: M deltax^k = r 
98 Newton::solveLinearSystem : entering the try section 14
98 in solveLinearSystemImpl_
56 Solve: M deltax^k = r 
56 Newton::solveLinearSystem : entering the try section 14
56 in solveLinearSystemImpl_
38 Solve: M deltax^k = r 
38 Newton::solveLinearSystem : entering the try section 14
38 in solveLinearSystemImpl_
60 Solve: M deltax^k = r 
60 Newton::solveLinearSystem : entering the try section 14
60 in solveLinearSystemImpl_
119 Solve: M deltax^k = r 
119 Newton::solveLinearSystem : entering the try section 14
119 in solveLinearSystemImpl_
45 Solve: M deltax^k = r 
45 Newton::solveLinearSystem : entering the try section 14
45 in solveLinearSystemImpl_
111 Solve: M deltax^k = r 
111 Newton::solveLinearSystem : entering the try section 14
111 in solveLinearSystemImpl_
115 Solve: M deltax^k = r 
115 Newton::solveLinearSystem : entering the try section 14
115 in solveLinearSystemImpl_
89 Solve: M deltax^k = r 
89 Newton::solveLinearSystem : entering the try section 14
89 in solveLinearSystemImpl_
108 Solve: M deltax^k = r 
108 Newton::solveLinearSystem : entering the try section 14
108 in solveLinearSystemImpl_
76 Solve: M deltax^k = r 
76 Newton::solveLinearSystem : entering the try section 14
76 in solveLinearSystemImpl_
117 Solve: M deltax^k = r 
117 Newton::solveLinearSystem : entering the try section 14
117 in solveLinearSystemImpl_
12 Solve: M deltax^k = r 
12 Newton::solveLinearSystem : entering the try section 14
12 in solveLinearSystemImpl_
55 Solve: M deltax^k = r 
55 Newton::solveLinearSystem : entering the try section 14
55 in solveLinearSystemImpl_
28 Solve: M deltax^k = r 
28 Newton::solveLinearSystem : entering the try section 14
28 in solveLinearSystemImpl_
23 Solve: M deltax^k = r 
23 Newton::solveLinearSystem : entering the try section 14
23 in solveLinearSystemImpl_
113 Solve: M deltax^k = r 
113 Newton::solveLinearSystem : entering the try section 14
113 in solveLinearSystemImpl_
114 Solve: M deltax^k = r 
114 Newton::solveLinearSystem : entering the try section 14
114 in solveLinearSystemImpl_
101 Solve: M deltax^k = r 
101 Newton::solveLinearSystem : entering the try section 14
101 in solveLinearSystemImpl_
19 Solve: M deltax^k = r 
19 Newton::solveLinearSystem : entering the try section 14
19 in solveLinearSystemImpl_
1 Solve: M deltax^k = r 
1 Newton::solveLinearSystem : entering the try section 14
1 in solveLinearSystemImpl_
93 Solve: M deltax^k = r 
93 Newton::solveLinearSystem : entering the try section 14
93 in solveLinearSystemImpl_
82 Solve: M deltax^k = r 
82 Newton::solveLinearSystem : entering the try section 14
82 in solveLinearSystemImpl_
63 Solve: M deltax^k = r 
63 Newton::solveLinearSystem : entering the try section 14
63 in solveLinearSystemImpl_
48 Solve: M deltax^k = r 
48 Newton::solveLinearSystem : entering the try section 14
48 in solveLinearSystemImpl_
20 Solve: M deltax^k = r 
20 Newton::solveLinearSystem : entering the try section 14
20 in solveLinearSystemImpl_
99 Solve: M deltax^k = r 
99 Newton::solveLinearSystem : entering the try section 14
99 in solveLinearSystemImpl_
24 Solve: M deltax^k = r 
24 Newton::solveLinearSystem : entering the try section 14
24 in solveLinearSystemImpl_
72 Solve: M deltax^k = r 
72 Newton::solveLinearSystem : entering the try section 14
72 in solveLinearSystemImpl_
103 Solve: M deltax^k = r 
103 Newton::solveLinearSystem : entering the try section 14
103 in solveLinearSystemImpl_
10 Solve: M deltax^k = r 
10 Newton::solveLinearSystem : entering the try section 14
10 in solveLinearSystemImpl_
90 Solve: M deltax^k = r 
90 Newton::solveLinearSystem : entering the try section 14
90 in solveLinearSystemImpl_
104 Solve: M deltax^k = r 
104 Newton::solveLinearSystem : entering the try section 14
104 in solveLinearSystemImpl_
39 Solve: M deltax^k = r 
39 Newton::solveLinearSystem : entering the try section 14
39 in solveLinearSystemImpl_
85 Solve: M deltax^k = r 
85 Newton::solveLinearSystem : entering the try section 14
85 in solveLinearSystemImpl_
25 Solve: M deltax^k = r 
25 Newton::solveLinearSystem : entering the try section 14
25 in solveLinearSystemImpl_
36 Solve: M deltax^k = r 
36 Newton::solveLinearSystem : entering the try section 14
36 in solveLinearSystemImpl_
0 Solve: M deltax^k = r 
0 Newton::solveLinearSystem : entering the try section 14
0 in solveLinearSystemImpl_
75 Solve: M deltax^k = r 
75 Newton::solveLinearSystem : entering the try section 14
75 in solveLinearSystemImpl_
68 Solve: M deltax^k = r 
68 Newton::solveLinearSystem : entering the try section 14
68 in solveLinearSystemImpl_
73 Solve: M deltax^k = r 
73 Newton::solveLinearSystem : entering the try section 14
73 in solveLinearSystemImpl_
11 Solve: M deltax^k = r 
11 Newton::solveLinearSystem : entering the try section 14
11 in solveLinearSystemImpl_
112 Solve: M deltax^k = r 
112 Newton::solveLinearSystem : entering the try section 14
112 in solveLinearSystemImpl_
102 Solve: M deltax^k = r 
102 Newton::solveLinearSystem : entering the try section 14
102 in solveLinearSystemImpl_
105 Solve: M deltax^k = r 
105 Newton::solveLinearSystem : entering the try section 14
105 in solveLinearSystemImpl_
59 Solve: M deltax^k = r 
59 Newton::solveLinearSystem : entering the try section 14
59 in solveLinearSystemImpl_
42 Solve: M deltax^k = r 
42 Newton::solveLinearSystem : entering the try section 14
42 in solveLinearSystemImpl_
4 Solve: M deltax^k = r 
4 Newton::solveLinearSystem : entering the try section 14
4 in solveLinearSystemImpl_
79 Solve: M deltax^k = r 
79 Newton::solveLinearSystem : entering the try section 14
79 in solveLinearSystemImpl_
5 Solve: M deltax^k = r 
5 Newton::solveLinearSystem : entering the try section 14
5 in solveLinearSystemImpl_
80 Solve: M deltax^k = r 
80 Newton::solveLinearSystem : entering the try section 14
80 in solveLinearSystemImpl_
87 Solve: M deltax^k = r 
87 Newton::solveLinearSystem : entering the try section 14
87 in solveLinearSystemImpl_
50 Solve: M deltax^k = r 
50 Newton::solveLinearSystem : entering the try section 14
50 in solveLinearSystemImpl_
32 Solve: M deltax^k = r 
32 Newton::solveLinearSystem : entering the try section 14
32 in solveLinearSystemImpl_
109 Solve: M deltax^k = r 
109 Newton::solveLinearSystem : entering the try section 14
109 in solveLinearSystemImpl_
34 Solve: M deltax^k = r 
34 Newton::solveLinearSystem : entering the try section 14
34 in solveLinearSystemImpl_
107 Solve: M deltax^k = r 
107 Newton::solveLinearSystem : entering the try section 14
107 in solveLinearSystemImpl_
106 Solve: M deltax^k = r 
106 Newton::solveLinearSystem : entering the try section 14
106 in solveLinearSystemImpl_
9 Solve: M deltax^k = r 
9 Newton::solveLinearSystem : entering the try section 14
9 in solveLinearSystemImpl_
30 Solve: M deltax^k = r 
30 Newton::solveLinearSystem : entering the try section 14
30 in solveLinearSystemImpl_
51 Solve: M deltax^k = r 
51 Newton::solveLinearSystem : entering the try section 14
51 in solveLinearSystemImpl_
21 Solve: M deltax^k = r 
21 Newton::solveLinearSystem : entering the try section 14
21 in solveLinearSystemImpl_
15 Solve: M deltax^k = r 
15 Newton::solveLinearSystem : entering the try section 14
15 in solveLinearSystemImpl_
33 Solve: M deltax^k = r 
33 Newton::solveLinearSystem : entering the try section 14
33 in solveLinearSystemImpl_
61 Solve: M deltax^k = r 
61 Newton::solveLinearSystem : entering the try section 14
61 in solveLinearSystemImpl_
78 Solve: M deltax^k = r 
78 Newton::solveLinearSystem : entering the try section 14
78 in solveLinearSystemImpl_
22 Solve: M deltax^k = r 
22 Newton::solveLinearSystem : entering the try section 14
22 in solveLinearSystemImpl_
43 Solve: M deltax^k = r 
43 Newton::solveLinearSystem : entering the try section 14
43 in solveLinearSystemImpl_
116 Solve: M deltax^k = r 
116 Newton::solveLinearSystem : entering the try section 14
116 in solveLinearSystemImpl_
26 Solve: M deltax^k = r 
26 Newton::solveLinearSystem : entering the try section 14
26 in solveLinearSystemImpl_
69 Solve: M deltax^k = r 
69 Newton::solveLinearSystem : entering the try section 14
69 in solveLinearSystemImpl_
47 Solve: M deltax^k = r 
47 Newton::solveLinearSystem : entering the try section 14
47 in solveLinearSystemImpl_
95 Solve: M deltax^k = r 
95 Newton::solveLinearSystem : entering the try section 14
95 in solveLinearSystemImpl_
8 Solve: M deltax^k = r 
8 Newton::solveLinearSystem : entering the try section 14
8 in solveLinearSystemImpl_
29 Solve: M deltax^k = r 
29 Newton::solveLinearSystem : entering the try section 14
29 in solveLinearSystemImpl_
31 Solve: M deltax^k = r 
31 Newton::solveLinearSystem : entering the try section 14
31 in solveLinearSystemImpl_
96 Solve: M deltax^k = r 
96 Newton::solveLinearSystem : entering the try section 14
96 in solveLinearSystemImpl_
58 Solve: M deltax^k = r 
58 Newton::solveLinearSystem : entering the try section 14
58 in solveLinearSystemImpl_
17 Solve: M deltax^k = r 
17 Newton::solveLinearSystem : entering the try section 14
17 in solveLinearSystemImpl_
120 Solve: M deltax^k = r 
120 Newton::solveLinearSystem : entering the try section 14
120 in solveLinearSystemImpl_
40 Solve: M deltax^k = r 
40 Newton::solveLinearSystem : entering the try section 14
40 in solveLinearSystemImpl_
53 Solve: M deltax^k = r 
53 Newton::solveLinearSystem : entering the try section 14
53 in solveLinearSystemImpl_
88 Solve: M deltax^k = r 
88 Newton::solveLinearSystem : entering the try section 14
88 in solveLinearSystemImpl_
91 Solve: M deltax^k = r 
91 Newton::solveLinearSystem : entering the try section 14
91 in solveLinearSystemImpl_
62 Solve: M deltax^k = r 
62 Newton::solveLinearSystem : entering the try section 14
62 in solveLinearSystemImpl_
3 Solve: M deltax^k = r 
3 Newton::solveLinearSystem : entering the try section 14
3 in solveLinearSystemImpl_
14 Solve: M deltax^k = r 
14 Newton::solveLinearSystem : entering the try section 14
14 in solveLinearSystemImpl_
74 Solve: M deltax^k = r 
74 Newton::solveLinearSystem : entering the try section 14
74 in solveLinearSystemImpl_
94 converged value: 1 121 1 let s go get convergedRemote
94 to  comm_.min(converged) 
94 did  comm_.min(converged) convergedRemote: 1
94 final convergedRemote: 1
94 Update: x^(k+1) = x^k - deltax^k 
94 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
94 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
94 Newton iteration 15 done94 , maximum relative shift = 4.337e-06
94 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
98 converged value: 1 121 1 let s go get convergedRemote
98 to  comm_.min(converged) 
98 did  comm_.min(converged) convergedRemote: 1
98 final convergedRemote: 1
98 Update: x^(k+1) = x^k - deltax^k 
98 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
98 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
98 Newton iteration 15 done98 , maximum relative shift = 4.337e-06
98 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
56 converged value: 1 121 1 let s go get convergedRemote
56 to  comm_.min(converged) 
56 did  comm_.min(converged) convergedRemote: 1
56 final convergedRemote: 1
56 Update: x^(k+1) = x^k - deltax^k 
56 newtonUpdateShift_: to shift_ = comm_.max(shift_) 
56 newtonUpdateShift_: did shift_ = comm_.max(shift_) 
56 Newton iteration 15 done56 , maximum relative shift = 4.337e-06
56 Assemble: r(x^k) = dS/dt + div F - q;   M = grad r
